(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    212294,       3985]
NotebookOptionsPosition[    211017,       3949]
NotebookOutlinePosition[    211379,       3965]
CellTagsIndexPosition[    211336,       3962]
WindowTitle->Automatic
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Dynamo 4S report", "Title",
 CellFrame->False,
 TextAlignment->Center,
 FontFamily->"Palatino",
 FontColor->GrayLevel[0.7],
 Background->Hue[0.3493635537666806, 0.4]],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {""},
     {
      RowBox[{"The", " ", "Game"}]}
    }],
   DisplayForm], "Section",
  StripOnInput->False]]],

Cell[BoxData[
 TemplateBox[{TagBox[
    RowBox[{"   ", 
      RowBox[{"Payoff", " ", "vector", " ", 
        RowBox[{"field", ":", "  ", "F"}]}]}], DisplayForm],TagBox[
    RowBox[{"(", "\[NoBreak]", 
      TagBox[
       GridBox[{{"w"}, {"x"}, {"y"}, {"z"}}, 
        GridBoxAlignment -> {
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
        GridBoxSpacings -> {"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], Column], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],TagBox[
    RowBox[{" ", 
      RowBox[{"=", " "}]}], DisplayForm],TagBox[
    RowBox[{"(", "\[NoBreak]", 
      TagBox[
       GridBox[{{
          SuperscriptBox[
           RowBox[{"(", 
             RowBox[{"w", "+", 
               RowBox[{"1.6`", " ", "y"}], "+", 
               RowBox[{"0.8566666666666667`", " ", "z"}]}], ")"}], "3.2`"]}, {
         
          SuperscriptBox[
           RowBox[{"(", 
             RowBox[{
               RowBox[{"1.6`", " ", "w"}], "+", "x", "+", 
               RowBox[{"0.8566666666666667`", " ", "z"}]}], ")"}], "3.2`"]}, {
         
          SuperscriptBox[
           RowBox[{"(", 
             RowBox[{
               RowBox[{"1.6`", " ", "x"}], "+", "y", "+", 
               RowBox[{"0.8566666666666667`", " ", "z"}]}], ")"}], "3.2`"]}, {
         
          SuperscriptBox[
           RowBox[{"(", 
             RowBox[{
               RowBox[{"0.8766666666666667`", " ", "w"}], "+", 
               RowBox[{"0.8766666666666667`", " ", "x"}], "+", 
               RowBox[{"0.8766666666666667`", " ", "y"}], "+", 
               RowBox[{"0.8666666666666667`", " ", "z"}]}], ")"}], "3.2`"]}}, 
        GridBoxAlignment -> {
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
        GridBoxSpacings -> {"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], Column], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]},
  "Row",
  DisplayFunction->(
   RowBox[{#, "\[InvisibleSpace]", #2, "\[InvisibleSpace]", #3, 
     "\[InvisibleSpace]", #4}]& ),
  InterpretationFunction->(RowBox[{"Row", "[", 
     RowBox[{"{", 
       RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], "]"}]& )]]],

Cell[BoxData[
 TagBox[
  RowBox[{"   ", 
   RowBox[{"Nash", " ", 
    RowBox[{"equilibrium", ":"}]}]}],
  DisplayForm]]],

Cell[BoxData[
 TemplateBox[{TagBox["     ", DisplayForm],TagBox[
    TagBox[
     GridBox[{{
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
           
           GridBox[{{"0", "0", "0", "1"}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]]}}, 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, GridBoxSpacings -> {"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], Column], 
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]},
  "Row",
  DisplayFunction->(RowBox[{#, "\[InvisibleSpace]", #2}]& ),
  InterpretationFunction->(RowBox[{"Row", "[", 
     RowBox[{"{", 
       RowBox[{#, ",", #2}], "}"}], "]"}]& )]]],

Cell[BoxData[
 TagBox[
  RowBox[{"   ", 
   RowBox[{"Regular", " ", 
    RowBox[{"ESS", ":"}]}]}],
  DisplayForm]]],

Cell[BoxData[
 TemplateBox[{TagBox["     ", DisplayForm],TagBox[
    TagBox[
     GridBox[{{
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
           
           GridBox[{{"0", "0", "0", "1"}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]]}}, 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, GridBoxSpacings -> {"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], Column], 
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]},
  "Row",
  DisplayFunction->(RowBox[{#, "\[InvisibleSpace]", #2}]& ),
  InterpretationFunction->(RowBox[{"Row", "[", 
     RowBox[{"{", 
       RowBox[{#, ",", #2}], "}"}], "]"}]& )]]],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {""},
     {
      RowBox[{"The", " ", "Dynamic"}]}
    }],
   DisplayForm], "Section",
  StripOnInput->False]]],

Cell[BoxData[
 TemplateBox[{TagBox[
    RowBox[{"   ", 
      RowBox[{"Name", " ", "of", " ", 
        RowBox[{"dynamic", ":", "  "}]}]}], DisplayForm],"Replicator"},
  "Row",
  DisplayFunction->(RowBox[{#, "\[InvisibleSpace]", #2}]& ),
  InterpretationFunction->(RowBox[{"Row", "[", 
     RowBox[{"{", 
       RowBox[{#, ",", #2}], "}"}], "]"}]& )]]],

Cell[BoxData[
 TagBox[
  RowBox[{"   ", 
   RowBox[{"Law", " ", "of", " ", 
    RowBox[{"motion", ":", " "}]}]}],
  DisplayForm]]],

Cell[BoxData[
 TemplateBox[{TagBox[
    RowBox[{"   ", 
      SubscriptBox["V", "F"]}], DisplayForm],TagBox[
    RowBox[{"(", "\[NoBreak]", 
      TagBox[
       GridBox[{{"w"}, {"x"}, {"y"}, {"z"}}, 
        GridBoxAlignment -> {
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
        GridBoxSpacings -> {"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], Column], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],TagBox[
    RowBox[{" ", 
      RowBox[{"=", " "}]}], DisplayForm],TagBox[
    RowBox[{"(", "\[NoBreak]", 
      TagBox[
       GridBox[{{
          RowBox[{
            RowBox[{"-", "w"}], " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{"x", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.6`", " ", "w"}], "+", "x", "+", 
                    RowBox[{"0.8566666666666667`", " ", "z"}]}], ")"}], 
                   "3.2`"]}], "+", 
                RowBox[{"y", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.6`", " ", "x"}], "+", "y", "+", 
                    RowBox[{"0.8566666666666667`", " ", "z"}]}], ")"}], 
                   "3.2`"]}], "-", 
                SuperscriptBox[
                 RowBox[{"(", 
                   RowBox[{"w", "+", 
                    RowBox[{"1.6`", " ", "y"}], "+", 
                    RowBox[{"0.8566666666666667`", " ", "z"}]}], ")"}], 
                 "3.2`"], "+", 
                RowBox[{"w", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"w", "+", 
                    RowBox[{"1.6`", " ", "y"}], "+", 
                    RowBox[{"0.8566666666666667`", " ", "z"}]}], ")"}], 
                   "3.2`"]}], "+", 
                RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.8766666666666667`", " ", "w"}], "+", 
                    RowBox[{"0.8766666666666667`", " ", "x"}], "+", 
                    RowBox[{"0.8766666666666667`", " ", "y"}], "+", 
                    RowBox[{"0.8666666666666667`", " ", "z"}]}], ")"}], 
                   "3.2`"], " ", "z"}]}], ")"}]}]}, {
          RowBox[{
            RowBox[{"-", "x"}], " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{"-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.6`", " ", "w"}], "+", "x", "+", 
                    RowBox[{"0.8566666666666667`", " ", "z"}]}], ")"}], 
                   "3.2`"]}], "+", 
                RowBox[{"x", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.6`", " ", "w"}], "+", "x", "+", 
                    RowBox[{"0.8566666666666667`", " ", "z"}]}], ")"}], 
                   "3.2`"]}], "+", 
                RowBox[{"y", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.6`", " ", "x"}], "+", "y", "+", 
                    RowBox[{"0.8566666666666667`", " ", "z"}]}], ")"}], 
                   "3.2`"]}], "+", 
                RowBox[{"w", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"w", "+", 
                    RowBox[{"1.6`", " ", "y"}], "+", 
                    RowBox[{"0.8566666666666667`", " ", "z"}]}], ")"}], 
                   "3.2`"]}], "+", 
                RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.8766666666666667`", " ", "w"}], "+", 
                    RowBox[{"0.8766666666666667`", " ", "x"}], "+", 
                    RowBox[{"0.8766666666666667`", " ", "y"}], "+", 
                    RowBox[{"0.8666666666666667`", " ", "z"}]}], ")"}], 
                   "3.2`"], " ", "z"}]}], ")"}]}]}, {
          RowBox[{
            RowBox[{"-", "y"}], " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{"x", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.6`", " ", "w"}], "+", "x", "+", 
                    RowBox[{"0.8566666666666667`", " ", "z"}]}], ")"}], 
                   "3.2`"]}], "-", 
                SuperscriptBox[
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"1.6`", " ", "x"}], "+", "y", "+", 
                    RowBox[{"0.8566666666666667`", " ", "z"}]}], ")"}], 
                 "3.2`"], "+", 
                RowBox[{"y", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.6`", " ", "x"}], "+", "y", "+", 
                    RowBox[{"0.8566666666666667`", " ", "z"}]}], ")"}], 
                   "3.2`"]}], "+", 
                RowBox[{"w", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"w", "+", 
                    RowBox[{"1.6`", " ", "y"}], "+", 
                    RowBox[{"0.8566666666666667`", " ", "z"}]}], ")"}], 
                   "3.2`"]}], "+", 
                RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.8766666666666667`", " ", "w"}], "+", 
                    RowBox[{"0.8766666666666667`", " ", "x"}], "+", 
                    RowBox[{"0.8766666666666667`", " ", "y"}], "+", 
                    RowBox[{"0.8666666666666667`", " ", "z"}]}], ")"}], 
                   "3.2`"], " ", "z"}]}], ")"}]}]}, {
          RowBox[{
            RowBox[{"-", "z"}], " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{"x", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.6`", " ", "w"}], "+", "x", "+", 
                    RowBox[{"0.8566666666666667`", " ", "z"}]}], ")"}], 
                   "3.2`"]}], "+", 
                RowBox[{"y", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.6`", " ", "x"}], "+", "y", "+", 
                    RowBox[{"0.8566666666666667`", " ", "z"}]}], ")"}], 
                   "3.2`"]}], "+", 
                RowBox[{"w", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"w", "+", 
                    RowBox[{"1.6`", " ", "y"}], "+", 
                    RowBox[{"0.8566666666666667`", " ", "z"}]}], ")"}], 
                   "3.2`"]}], "-", 
                SuperscriptBox[
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"0.8766666666666667`", " ", "w"}], "+", 
                    RowBox[{"0.8766666666666667`", " ", "x"}], "+", 
                    RowBox[{"0.8766666666666667`", " ", "y"}], "+", 
                    RowBox[{"0.8666666666666667`", " ", "z"}]}], ")"}], 
                 "3.2`"], "+", 
                RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.8766666666666667`", " ", "w"}], "+", 
                    RowBox[{"0.8766666666666667`", " ", "x"}], "+", 
                    RowBox[{"0.8766666666666667`", " ", "y"}], "+", 
                    RowBox[{"0.8666666666666667`", " ", "z"}]}], ")"}], 
                   "3.2`"], " ", "z"}]}], ")"}]}]}}, 
        GridBoxAlignment -> {
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
        GridBoxSpacings -> {"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], Column], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]},
  "Row",
  DisplayFunction->(
   RowBox[{#, "\[InvisibleSpace]", #2, "\[InvisibleSpace]", #3, 
     "\[InvisibleSpace]", #4}]& ),
  InterpretationFunction->(RowBox[{"Row", "[", 
     RowBox[{"{", 
       RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], "]"}]& )]]],

Cell[BoxData[
 TagBox[
  RowBox[{"   ", 
   RowBox[{"Stable", " ", "rest", " ", 
    RowBox[{"point", ":"}]}]}],
  DisplayForm]]],

Cell[BoxData[
 TagBox[
  RowBox[{"   ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"state", " ", "x"}], ",", " ", 
     RowBox[{"relevant", " ", "eigenvalues", " ", "of", " ", 
      RowBox[{
       SubscriptBox["DV", "F"], "[", "x", "]"}]}], ",", " ", 
     RowBox[{"relevant", " ", "eigenvectors", " ", "of", " ", 
      RowBox[{
       SubscriptBox["DV", "F"], "[", "x", "]"}]}]}], ")"}]}],
  DisplayForm]]],

Cell[BoxData[
 TemplateBox[{TagBox["   ", DisplayForm],TagBox[
    GridBox[{{
       TagBox[
        RowBox[{"(", "\[NoBreak]", 
          
          GridBox[{{"0", "0", "0", "1"}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
           GridBoxSpacings -> {"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], 
       TagBox[
        RowBox[{"(", "\[NoBreak]", 
          GridBox[{{
             RowBox[{"-", "0.023062312704496213`"}], 
             RowBox[{"-", "0.0230623127044962`"}], 
             RowBox[{"-", "0.023062312704496095`"}]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
           GridBoxSpacings -> {"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], 
       TagBox[
        RowBox[{"(", "\[NoBreak]", 
          GridBox[{{
             RowBox[{"(", "\[NoBreak]", 
               TagBox[
                GridBox[{{"0.7071067811865475`"}, {
                   RowBox[{"-", "0.7071067811865475`"}]}, {"0"}, {"0"}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], Column], 
               "\[NoBreak]", ")"}], 
             RowBox[{"(", "\[NoBreak]", 
               TagBox[
                GridBox[{{
                   RowBox[{"-", "0.40824829046386296`"}]}, {
                   RowBox[{"-", "0.40824829046386274`"}]}, {
                  "0.8164965809277259`"}, {"0"}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], Column], 
               "\[NoBreak]", ")"}], 
             RowBox[{"(", "\[NoBreak]", 
               TagBox[
                GridBox[{{
                   RowBox[{"-", "0.28867513459481325`"}]}, {
                   RowBox[{"-", "0.28867513459481325`"}]}, {
                   RowBox[{"-", "0.2886751345948132`"}]}, {
                  "0.8660254037844383`"}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], Column], 
               "\[NoBreak]", ")"}]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
           GridBoxSpacings -> {"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]]}}, 
     GridBoxAlignment -> {
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Top}}, 
       "RowsIndexed" -> {}}, GridBoxSpacings -> {"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[2.0999999999999996`]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], 
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$, TableAlignments -> Top]]]},
  "Row",
  DisplayFunction->(RowBox[{#, "\[InvisibleSpace]", #2}]& ),
  InterpretationFunction->(RowBox[{"Row", "[", 
     RowBox[{"{", 
       RowBox[{#, ",", #2}], "}"}], "]"}]& )]]],

Cell[BoxData[
 TagBox[
  RowBox[{"   ", 
   RowBox[{"Unstable", " ", "rest", " ", 
    RowBox[{"points", ":"}]}]}],
  DisplayForm]]],

Cell[BoxData[
 TagBox[
  RowBox[{"   ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"state", " ", "x"}], ",", " ", 
     RowBox[{"relevant", " ", "eigenvalues", " ", "of", " ", 
      RowBox[{
       SubscriptBox["DV", "F"], "[", "x", "]"}]}], ",", " ", 
     RowBox[{"relevant", " ", "eigenvectors", " ", "of", " ", 
      RowBox[{
       SubscriptBox["DV", "F"], "[", "x", "]"}]}]}], ")"}]}],
  DisplayForm]]],

Cell[BoxData[
 TemplateBox[{TagBox["   ", DisplayForm],TagBox[
    GridBox[{{
       TagBox[
        RowBox[{"(", "\[NoBreak]", 
          
          GridBox[{{"0", "0", "0.075`5.", "0.925`5."}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
           GridBoxSpacings -> {"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], 
       TagBox[
        RowBox[{"(", "\[NoBreak]", 
          GridBox[{{
             RowBox[{"-", "0.1593958753841079`"}], "0.11144309789270528`", 
             "0.021646754339375924`"}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
           GridBoxSpacings -> {"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], 
       TagBox[
        RowBox[{"(", "\[NoBreak]", 
          GridBox[{{
             RowBox[{"(", "\[NoBreak]", 
               TagBox[
                GridBox[{{"0"}, {
                   RowBox[{"-", "0.7905594521658906`"}]}, {
                  "0.572089834513926`"}, {"0.2184696176519648`"}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], Column], 
               "\[NoBreak]", ")"}], 
             RowBox[{"(", "\[NoBreak]", 
               TagBox[
                GridBox[{{
                   RowBox[{"-", "0.48846140890287093`"}]}, {"0"}, {
                  "0.8108470552651645`"}, {
                   RowBox[{"-", "0.32238564636229305`"}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], Column], 
               "\[NoBreak]", ")"}], 
             RowBox[{"(", "\[NoBreak]", 
               TagBox[
                GridBox[{{"0"}, {"0"}, {
                   RowBox[{"-", "0.7071067811865481`"}]}, {
                  "0.707106781186547`"}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], Column], 
               "\[NoBreak]", ")"}]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
           GridBoxSpacings -> {"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]]}, {
       TagBox[
        RowBox[{"(", "\[NoBreak]", 
          
          GridBox[{{"0", "0", "1", "0"}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
           GridBoxSpacings -> {"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], 
       TagBox[
        RowBox[{"(", "\[NoBreak]", 
          GridBox[{{"3.499703985381859`", 
             RowBox[{"-", "1"}], 
             RowBox[{"-", "0.3437483927464241`"}]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
           GridBoxSpacings -> {"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], 
       TagBox[
        RowBox[{"(", "\[NoBreak]", 
          GridBox[{{
             RowBox[{"(", "\[NoBreak]", 
               TagBox[
                GridBox[{{
                   RowBox[{"-", "0.7071067811865477`"}]}, {"0"}, {
                  "0.7071067811865475`"}, {"0"}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], Column], 
               "\[NoBreak]", ")"}], 
             RowBox[{"(", "\[NoBreak]", 
               TagBox[
                GridBox[{{"0"}, {"0.7071067811865468`"}, {
                   RowBox[{"-", "0.7071067811865482`"}]}, {"0"}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], Column], 
               "\[NoBreak]", ")"}], 
             RowBox[{"(", "\[NoBreak]", 
               TagBox[
                GridBox[{{"0"}, {"0"}, {
                   RowBox[{"-", "0.7071067811865471`"}]}, {
                  "0.707106781186548`"}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], Column], 
               "\[NoBreak]", ")"}]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
           GridBoxSpacings -> {"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]]}, {
       TagBox[
        RowBox[{"(", "\[NoBreak]", 
          
          GridBox[{{"0", "0.075`5.", "0", "0.925`5."}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
           GridBoxSpacings -> {"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], 
       TagBox[
        RowBox[{"(", "\[NoBreak]", 
          GridBox[{{
             RowBox[{"-", "0.15939587538410752`"}], "0.11144309789270546`", 
             "0.021646754339375893`"}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
           GridBoxSpacings -> {"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], 
       TagBox[
        RowBox[{"(", "\[NoBreak]", 
          GridBox[{{
             RowBox[{"(", "\[NoBreak]", 
               TagBox[
                GridBox[{{"0.7905594521658907`"}, {
                   RowBox[{"-", "0.5720898345139258`"}]}, {"0"}, {
                   RowBox[{"-", "0.21846961765196451`"}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], Column], 
               "\[NoBreak]", ")"}], 
             RowBox[{"(", "\[NoBreak]", 
               TagBox[
                GridBox[{{"0"}, {
                   RowBox[{"-", "0.8108470552651643`"}]}, {
                  "0.4884614089028713`"}, {"0.3223856463622931`"}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], Column], 
               "\[NoBreak]", ")"}], 
             RowBox[{"(", "\[NoBreak]", 
               TagBox[
                GridBox[{{"0"}, {
                   RowBox[{"-", "0.7071067811865478`"}]}, {"0"}, {
                  "0.7071067811865474`"}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], Column], 
               "\[NoBreak]", ")"}]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
           GridBoxSpacings -> {"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]]}, {
       TagBox[
        RowBox[{"(", "\[NoBreak]", 
          
          GridBox[{{"0", "1", "0", "0"}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
           GridBoxSpacings -> {"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], 
       TagBox[
        RowBox[{"(", "\[NoBreak]", 
          GridBox[{{"3.4997039853818626`", 
             RowBox[{"-", "1"}], 
             RowBox[{"-", "0.34374839274642416`"}]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
           GridBoxSpacings -> {"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], 
       TagBox[
        RowBox[{"(", "\[NoBreak]", 
          GridBox[{{
             RowBox[{"(", "\[NoBreak]", 
               TagBox[
                GridBox[{{"0"}, {"0.7071067811865472`"}, {
                   RowBox[{"-", "0.7071067811865479`"}]}, {"0"}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], Column], 
               "\[NoBreak]", ")"}], 
             RowBox[{"(", "\[NoBreak]", 
               TagBox[
                GridBox[{{"0.7071067811865474`"}, {
                   RowBox[{"-", "0.7071067811865478`"}]}, {"0"}, {"0"}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], Column], 
               "\[NoBreak]", ")"}], 
             RowBox[{"(", "\[NoBreak]", 
               TagBox[
                GridBox[{{"0"}, {
                   RowBox[{"-", "0.7071067811865468`"}]}, {"0"}, {
                  "0.7071067811865482`"}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], Column], 
               "\[NoBreak]", ")"}]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
           GridBoxSpacings -> {"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]]}, {
       TagBox[
        RowBox[{"(", "\[NoBreak]", 
          
          GridBox[{{"0.075`5.", "0", "0", "0.925`5."}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
           GridBoxSpacings -> {"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], 
       TagBox[
        RowBox[{"(", "\[NoBreak]", 
          GridBox[{{
             RowBox[{"-", "0.15939587538410796`"}], "0.11144309789270535`", 
             "0.0216467543393759`"}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
           GridBoxSpacings -> {"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], 
       TagBox[
        RowBox[{"(", "\[NoBreak]", 
          GridBox[{{
             RowBox[{"(", "\[NoBreak]", 
               TagBox[
                GridBox[{{
                   RowBox[{"-", "0.5720898345139258`"}]}, {"0"}, {
                  "0.7905594521658909`"}, {
                   RowBox[{"-", "0.21846961765196468`"}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], Column], 
               "\[NoBreak]", ")"}], 
             RowBox[{"(", "\[NoBreak]", 
               TagBox[
                GridBox[{{
                   RowBox[{"-", "0.8108470552651641`"}]}, {
                  "0.48846140890287154`"}, {"0"}, {"0.32238564636229333`"}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], Column], 
               "\[NoBreak]", ")"}], 
             RowBox[{"(", "\[NoBreak]", 
               TagBox[
                GridBox[{{
                   RowBox[{"-", "0.7071067811865472`"}]}, {"0"}, {"0"}, {
                  "0.7071067811865477`"}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], Column], 
               "\[NoBreak]", ")"}]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
           GridBoxSpacings -> {"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]]}, {
       TagBox[
        RowBox[{"(", "\[NoBreak]", 
          GridBox[{{
             FractionBox["1", "3"], 
             FractionBox["1", "3"], 
             FractionBox["1", "3"], "0"}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
           GridBoxSpacings -> {"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], 
       TagBox[
        RowBox[{"(", "\[NoBreak]", 
          GridBox[{{
             RowBox[{"0.1557160319248255`", "\[VeryThinSpace]", "+", 
               RowBox[{"1.0788322715597007`", " ", "\[ImaginaryI]"}]}], 
             RowBox[{"0.1557160319248255`", "\[VeryThinSpace]", "-", 
               RowBox[{"1.0788322715597007`", " ", "\[ImaginaryI]"}]}], 
             "0.023655238583366055`"}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
           GridBoxSpacings -> {"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], 
       TagBox[
        RowBox[{"(", "\[NoBreak]", 
          GridBox[{{
             RowBox[{"(", "\[NoBreak]", 
               TagBox[
                GridBox[{{
                   RowBox[{"0.577350269189626`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}, {
                   RowBox[{
                    RowBox[{"-", "0.2886751345948131`"}], "-", 
                    
                    RowBox[{
                    "0.49999999999999994`", " ", "\[ImaginaryI]"}]}]}, {
                   RowBox[{
                    RowBox[{"-", "0.2886751345948128`"}], "+", 
                    
                    RowBox[{
                    "0.5000000000000001`", " ", "\[ImaginaryI]"}]}]}, {"0"}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], Column], 
               "\[NoBreak]", ")"}], 
             RowBox[{"(", "\[NoBreak]", 
               TagBox[
                GridBox[{{
                   RowBox[{"0.577350269189626`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}, {
                   RowBox[{
                    RowBox[{"-", "0.2886751345948131`"}], "+", 
                    
                    RowBox[{
                    "0.49999999999999994`", " ", "\[ImaginaryI]"}]}]}, {
                   RowBox[{
                    RowBox[{"-", "0.2886751345948128`"}], "-", 
                    
                    RowBox[{
                    "0.5000000000000001`", " ", "\[ImaginaryI]"}]}]}, {"0"}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], Column], 
               "\[NoBreak]", ")"}], 
             RowBox[{"(", "\[NoBreak]", 
               TagBox[
                GridBox[{{
                   RowBox[{"-", "0.2886751345675524`"}]}, {
                   RowBox[{"-", "0.28867513456755217`"}]}, {
                   RowBox[{"-", "0.28867513456755234`"}]}, {
                  "0.8660254038116992`"}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], Column], 
               "\[NoBreak]", ")"}]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
           GridBoxSpacings -> {"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]]}, {
       TagBox[
        RowBox[{"(", "\[NoBreak]", 
          
          GridBox[{{"1", "0", "0", "0"}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
           GridBoxSpacings -> {"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], 
       TagBox[
        RowBox[{"(", "\[NoBreak]", 
          GridBox[{{"3.4997039853818586`", 
             RowBox[{"-", "1"}], 
             RowBox[{"-", "0.3437483927464238`"}]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
           GridBoxSpacings -> {"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], 
       TagBox[
        RowBox[{"(", "\[NoBreak]", 
          GridBox[{{
             RowBox[{"(", "\[NoBreak]", 
               TagBox[
                GridBox[{{"0.7071067811865479`"}, {
                   RowBox[{"-", "0.7071067811865471`"}]}, {"0"}, {"0"}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], Column], 
               "\[NoBreak]", ")"}], 
             RowBox[{"(", "\[NoBreak]", 
               TagBox[
                GridBox[{{"0.7071067811865475`"}, {"0"}, {
                   RowBox[{"-", "0.7071067811865477`"}]}, {"0"}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], Column], 
               "\[NoBreak]", ")"}], 
             RowBox[{"(", "\[NoBreak]", 
               TagBox[
                GridBox[{{"0.7071067811865477`"}, {"0"}, {"0"}, {
                   RowBox[{"-", "0.7071067811865474`"}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], Column], 
               "\[NoBreak]", ")"}]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
           GridBoxSpacings -> {"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]]}}, 
     GridBoxAlignment -> {
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Top}}, 
       "RowsIndexed" -> {}}, GridBoxSpacings -> {"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[2.0999999999999996`]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], 
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$, TableAlignments -> Top]]]},
  "Row",
  DisplayFunction->(RowBox[{#, "\[InvisibleSpace]", #2}]& ),
  InterpretationFunction->(RowBox[{"Row", "[", 
     RowBox[{"{", 
       RowBox[{#, ",", #2}], "}"}], "]"}]& )]]],

Cell[BoxData[
 Graphics3DBox[{{
    {RGBColor[0, 1, 0], Opacity[0], EdgeForm[RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0]], Specularity[
      GrayLevel[1], 20], 
     Polygon3DBox[
      NCache[{{0, Rational[1, 4] 3^Rational[-1, 2] + 
         Rational[1, 4] 3^Rational[1, 2], Rational[-1, 2] 
         6^Rational[-1, 2]}, {
        Rational[1, 2], Rational[1, 4] 3^Rational[-1, 2] + 
         Rational[-1, 4] 3^Rational[1, 2], Rational[-1, 2] 
         6^Rational[-1, 2]}, {
        Rational[-1, 2], Rational[1, 4] 3^Rational[-1, 2] + 
         Rational[-1, 4] 3^Rational[1, 2], Rational[-1, 2] 
         6^Rational[-1, 2]}}, {{
        0, 0.5773502691896257, -0.20412414523193154`}, {
        0.5, -0.28867513459481287`, -0.20412414523193154`}, {-0.5, \
-0.28867513459481287`, -0.20412414523193154`}}]]}, 
    {RGBColor[0, 1, 0], Opacity[0.05], EdgeForm[RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0]], Specularity[
      GrayLevel[1], 20], 
     Polygon3DBox[
      NCache[{{0, Rational[1, 4] 3^Rational[-1, 2] + 
         Rational[1, 4] 3^Rational[1, 2], Rational[-1, 2] 
         6^Rational[-1, 2]}, {
        Rational[1, 2], Rational[1, 4] 3^Rational[-1, 2] + 
         Rational[-1, 4] 3^Rational[1, 2], Rational[-1, 2] 
         6^Rational[-1, 2]}, {
        0, 0, Rational[2, 3]^Rational[1, 2] + 
         Rational[-1, 2] 6^Rational[-1, 2]}}, {{
        0, 0.5773502691896257, -0.20412414523193154`}, {
        0.5, -0.28867513459481287`, -0.20412414523193154`}, {
        0, 0, 0.6123724356957945}}]]}, 
    {RGBColor[0, 1, 0], Opacity[0.05], EdgeForm[RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0]], Specularity[
      GrayLevel[1], 20], 
     Polygon3DBox[
      NCache[{{0, Rational[1, 4] 3^Rational[-1, 2] + 
         Rational[1, 4] 3^Rational[1, 2], Rational[-1, 2] 
         6^Rational[-1, 2]}, {
        Rational[-1, 2], Rational[1, 4] 3^Rational[-1, 2] + 
         Rational[-1, 4] 3^Rational[1, 2], Rational[-1, 2] 
         6^Rational[-1, 2]}, {
        0, 0, Rational[2, 3]^Rational[1, 2] + 
         Rational[-1, 2] 6^Rational[-1, 2]}}, {{
        0, 0.5773502691896257, -0.20412414523193154`}, {-0.5, \
-0.28867513459481287`, -0.20412414523193154`}, {0, 0, 0.6123724356957945}}]]}, 
    {RGBColor[0, 1, 0], Opacity[0.05], EdgeForm[RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0]], Specularity[
      GrayLevel[1], 20], 
     Polygon3DBox[
      NCache[{{Rational[1, 2], Rational[1, 4] 3^Rational[-1, 2] + 
         Rational[-1, 4] 3^Rational[1, 2], Rational[-1, 2] 
         6^Rational[-1, 2]}, {
        Rational[-1, 2], Rational[1, 4] 3^Rational[-1, 2] + 
         Rational[-1, 4] 3^Rational[1, 2], Rational[-1, 2] 
         6^Rational[-1, 2]}, {
        0, 0, Rational[2, 3]^Rational[1, 2] + 
         Rational[-1, 2] 6^Rational[-1, 2]}}, {{
        0.5, -0.28867513459481287`, -0.20412414523193154`}, {-0.5, \
-0.28867513459481287`, -0.20412414523193154`}, {
        0, 0, 0.6123724356957945}}]]}}, {{}, {}, 
    {GrayLevel[0], Thickness[0.0075], Opacity[0.8], Line3DBox[CompressedData["

1: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
      "]]}}, {{}, {}, 
    {GrayLevel[0.5], Thickness[0.005], Opacity[0.3], Line3DBox[CompressedData["
1:eJwUmnk41F0UxyVFJakklYqkRKQoFB2yliWVoqhkV0RSqSgiZN/3neyyj90Z
Y52xzFhCRSlLKkmRtOm97/P46/Pc53vP+d5z7++ceQibOZy2ZGdjY+NZysZG
/tjkB4X9YmJz0HT5xvl7lHZkY3MvPux4pp7VaGGw0zgHF6QdVJOrCD/Nnbm9
ZT9y9L+5rSWYg9R1gWb1tYRTJNNOVajgIKw8YJKYjUX5kmyfae3obr/9Iyv2
FPIurq2kxWVhTMOlHauYhPubJDpduoIsK7dXgp5PMURb67TGRDtSDXmPvhl3
RN+3x7f94ElFoesZCuG8HchmUVt15+VDtDnx2e51UwpaOCtZc67vwJmXT75r
mrijo5Ttjlv3UtB0qqb21gay3kErQpvhjkU+hmdt6MmY7X2Voby5A1m5IwUH
0z1wwelVpPC1RDRaHjIcLEJ0zE6dva/liTaskmd84TH4h//sidUHOzBk76+b
fy57I1szhWc9RyAm+IieNz3TgdQSofP6tf44cpk7Lz/JH6WVlNVkzv4fp23O
S54ApN51unZe3g9HxBhPFs8RnQnzqZWmAaj/NV1+ia0P5nvOcj240IFFSqn3
jBYDkO3eFbvtVA8McF4mIHSFxGP9/sVj8SBUdjkvqLDHFn09Tt/5aNeBbVq0
MW6hEHQX2Lnptpk5Kp8d6IHrHaiVFTUtf5RwjjnO8gPGqNxatznQoQN5tQPk
nhmHIBufYVT8UmlMaW4/s8aJ7HuUvsYpgvADuwOeHrcEZe9nWcW3O1Beoz5a
9y/RWRbo07HSA3SEDpdbP+hA6QdZJ+l5oegeGtGm4PkIuH5IBMs/JPsefrse
6gnf+Er/3W9P0BIRHWdz70DTFX/E5pihOFLnKdP12RvGZron73h0YOX2vU2b
voai0OjmMYfeANh5X8d30bMDhT7e3asiHoaO+6L/bdANgrn8yPt+XsRnoauj
yYfCMCTA7RC9JRjE7s0Ur37cge4xpu/kj5H1uWIft18MBS+lY+0/CRfL0N+/
0TAM3c9xfrLUj4A5c4FJa58OTJHQML15Jwzbbly0FVwdCUKT0RIFhC8kaqSF
uYWh6ZZtBjR6JPjaslw+EK71qmzz+0dhWCS3kW7gHQVik0Ftgr4kzuDcXY4+
YciVxz/BOhYNbBYp6zUJH7RQEZH0D0PW+Y9tMv+igXe4+7QN4ZOc4fZbg8LQ
Rsw0+F5NDOifmXngTjhVpMpMOSQMhX6rG6bdiQVqS1tIMOEs887LkaEkL4rt
0WyZODCVE/OIJNz35oeGLWFh6BL77cqTL3EQsnFQK4zwkJj+8R6y3vRF+9ix
vHhQ1kgaeUw4l+RqsWqiP3Ln/eduqwTg4FVVcSR85KHiOIvEw6UhnyGzIxGK
aEHmp/7P6+f6e/wBYTjDVyxlOZwIf/KOK+8hvI1NVdXPNwyp5Wpl5jFJkL9J
kfWD+DOy6JIo4RWG+YOqu14vTwG1qskpF8J9H1TcmXMhfG9Ny9DFFGgLCxiU
JpxL4u6DSCfCkyw1qWUpwPulNnjEm9S5ktOw67UwdOUT1NlvlgqDnEeO7yZc
yDU8WNA4DPl2jEfE16RB9tcYtVOkHowOf1YN3R+GYv96DMKtn8KIo5PSOlKH
yj9Elw5Vh2KGEaPUsPYplB3/sEON1K3Lb7iWkR2KXBVXPk/zZkKl8c3b9m7E
/+sPJ3MjQ9E5IcsvtCoTZMWi9TPvE/9bj/M72odiwgJ3li9XNnCtWJAqukPu
y9Dmjx3riX6QuZ1uQi7kCyeFbCf3rujZabbLR0KQ2pLrUfc5F3ReRT9tJvdU
es+rpnbBEOR+df3El6N5wB0o0Wl2jdxHGae1w7+CcafF0bfhI3lQRB1XemRD
6lN8WCrbJRjHCrX+NQkVgLKxKPdZMxJn3psHIleCMGTrs7CJ8EJgY06HqRuQ
d8Y5+dPzMX/s4lF8K7+9BBy3TN6W3E988A5/klX0GPNrLIutjpVA2XSrfKVU
BzrylKpeU3mMPfSslTaWJaCj8KVFYS/ZV2FtUBDLC2uNWWWjuSXAZrvlkPBu
4j8oZM588MRMQd59ZTKlwLZJ7LO7IKk3jldxPCse4RCP72NLxTIQmt2j7r6M
3Pcdk6NiM/dxvifkvu9uCoREJGywZLWjcqeP1rozZjgdMhJ7Q40C7nkenLQO
8v5f8ku87nEZNz/8sknkCgUsBK8bbqCT74jYapVNJy/g63OR617HUkDwiiRX
cgPhR1lJyz1PovybFQV5XBXgTv9hd7SEcCvX+IZ5OYjL12WzflUBQy98wvNC
yb6Sv/fqcl4FWnJAX9qZKhDQ4OCWP95O4h/JitH3BKtwh6djV6ug48uM0pxq
O85klxm9OuoF9b8Ce195VMGgPvfPjKNE56jc4M59j+HBVRHzD8+qINs5ce2Y
TDuO1B9f077BB9iCy/3uL6sGi6v8a19sbUfHDHMpo99+wD7+TEgvg/Azam4p
XxjI9nJNg294KBzb4c7XSakG07/ptpkfGCgmOejQsjkMTtctnlxsqwZ5bqs1
qaMMTHHQUl2aHgauhw4vvzNVDSOJ7XHOAwwcFK+PdaGEg7iR6PG6fTXAcUf2
SGQ9A+XP6bDUP0TCjFH97MOsGsg2kSlo8GMg9fdtvQW3OLDwbbdfX14DMTHs
/Ru8GFg0OXJmii8ewpbc1jWk1YDYyM1tl90YmG12xrk/Px6+8SyOfHlF1v/b
KtntwED92DBtvzcJ8LZU/5LZqloY4mg6KGvAQJuTz+su6CeDdP8uPzXjWjBV
klH6t5nof03QtdqXBl+Kv34aMK8FabdvkznrGch9zPvVxUdpwGGvzbvFrhYi
rtsYn+BmoEF4Jh/9eRrw7XSpLLpfC7K4ptPuLx1jIk9wLbilg8TKk5Kbo2tB
2dfBQeENHSszDG5m9mYArxaL+am+FrQEpHUWU+g4ZNVaQgnPAruz1tpqtFpw
LilXjIilo0kLf2fM+yzoLZ+5Z9hMdF7xbNkRRscEYVe5/iPZkHs/79AzRi10
NBe9FPUk67VdnUzHs0HAWn30a0ct8C2WDsbfp2PHC97FvMM54Fmc5jXTVQtc
Jf/+rnAm+44+O6kfkgPOah8mtvXUgmLcnx9dFnTcqfm9KkUxF85PbGfq9daC
/Idtn0Qv0nGKIntPOzwX9A4HLCr01cKISoLqrbN07PORP6bzMRdW7ToYMkI4
dYS2rk6XjgGnD+mlqeSBbrBw8rHntWDC/tb2rzod8wvNX+rE5kG7sZGGKeHy
o2oXDh0l+nLzO7S/5oHKjZEUBcJHUPG79SESp6eIRcLxfLAtp9K7iP5YH79O
mBQdZfcKv4S0fPizmm1o+//7XhJ2LN9FRy/6zgbZ3/lQbvr0214S/0JsrlP3
NsLnzM/eMygAvfAKsfnuWhBqZLOc4Cfxq/P1rnlWALu+qVyuI/7oXNW99Hs5
Hbl/R9/fbfYMNnhutN1B/LfwscjrnWhDjqQD3t86C2HjvtKR9eS8Bg/9k656
3YZHJ7S1WHxFkF4V6EUj5yvNs1Q5pr8N65+qDrcfK4Jwn0vjhhW10PT3sLZq
Sxueexw4JZVcBGm9XJutn9aC0ZWtuieftmHu1oHNMeeLIalkxVKNlFoQO/zR
YGkiWT+ovtHHtxjidoVojcaRONuO+BVHtKGf+86l0RXFYH/uber5YKL/rejF
H882pAioJm/kLwF6s23c4Vu1wHZlMPSUWRvSLGfSAvtK4N3cUpiXJfXvUZrF
ua0N9RyDNF+eKwP/lZR9dY9rYNI1zN4grBXjLrtmbLWvAFlubv/COzVg9HeD
N/q2YkuX6sVT6RUwe8QiysS2Bvo0Wh7tftiKpzk/5EW9qAA754mZ99o1wKtg
UzF9rRUnvlqMntaohGKtJdCxugZYl66xXVIn6yPjLe8LVYHVQ/qR9Y+rQdqj
ePfbHy34evS3f3d/NUxk8ut9VK2ClKyYl09MWpDHMPJysHo99BdahI5soIBp
/g7lM5LNqBusGmLpSoPFp70WaT/LYa//+2PndzZjOp/EMXokDX7lOy49NFwO
Rp/aOa22NGNgoX//pkIavDieyOpNJzyH6RyxohmzXLk/PXxLg0j1+C9fpcpB
6zpD9PhEEz7vvpB6Rr0R3kxxZvwk35HJtaN8sqlNqKq1GFDJ1QSK9LWt2w6X
QMwPD7Mt25rwznHpJ173m+F516PuDIESSDGWVlfjb0LO1UaexaHNIGWXrLDs
RzGksI5lufA04cU9ZxfqspphR+m25edKi4HPzO8Ox79GDHfQbLjZ2wy7wqsc
lMSLQa0vcX3+SCPiFwqf1p4W8D/y2uD02iLg0N7pfT6zEffrJaw52tUCFJbM
QYZ/Hmh5dPzboNiIy3LCofNXK/xRHm7XUM8DX1qN2/lDjfjd/x9r+ao2MHvY
8MV/MRdMvys8yZVuRLme5as3b2mDHhW9DkfHXHC23ZV7S5TojHXe6DjcBglv
c7jyTuUAn/Od4pI1jXh//6LPeZc2oPQx7qxamQUCN7tuv5qgoYe0n9nwpzZg
qD4yzDmTBtS7HsIPUmh4q4aN/q6EDn3mn5tDl6dBSuGNbUkJNDRWN08arKMD
e4PxjGZVKuj7cJ/oiqFhZJ/fs5Q2OjQ1+oxu3ZYKpo8oTpdDaTjrRKnOHKbD
SAPnuQlGMkzeWDmj4UnDv/UXRR4vY0D+TLtB6fM4WGgJcFe4SsM19yrWXdFh
AK+t6dMzB+OAzcXG2MKahsFrBzdaGDCgQy7FMSwiFlwng21TLGgo8zr09iET
BrQd2L996lQM2Ag3XtC5TMMlVz/Hal1jgKzyUke+tkgQ05SXvHWWhnXfQj9s
9WGAQPPriQtpIcAVaSfKr05Dt5SmL9fKGeBYnVDFfBUM7j5KXIdUaWj7y+F9
VTUDXL7MbV3pFAQZFYabr6nQML62drYdGRAiEtjzNt4fXIsEVmw4SsOB4NCk
I3Sif1FifPf4Y1AeY9yxlSe8qEVd/QUDUnTYU/VveYGNuNwJWTkatstF0QqH
GGBjQhVM5PCEymJmId8h4r+1h8LwGwaYxrPxpAu5A9tTNTN+WRp+yteIcB9n
gLsBX0P1BTfIT2VrkZOhYWPldbn598S3/esv3HO6B01s2R+vH6Ch4Xm9M1If
GSD0qaB/OMEZZo4Kp2/bT8Portg7458ZwHbsYaFn4Q3QkSrQipamoRLPO12L
Lwyg0p+Pz7jbQ/bppF5Rwn/6Ug4+nSHrW2sD7yVbg8kXDW3GPhoqcJptzv5K
8ooPSsusvgKDmj8pXoTfObXvvd03EidLZ2Q6wxBckjm3nSV8q7Stz+z//JDb
irp4TUhRaPI5QnjytQsTR2aJvvupZ9fqmfWV5z1+yxHu0KH7Rf1/7uLq4D+p
iXtVQ91PEL50S1DgWsLdLyrb6r8xRAMFjW03Cadvt8pPIvopT8+cd5u8gjEP
v70qJnx/upDc5//jbE5nTxmzRgGvTOpyktfbVNqmvyQvoY+iDqvH7NFktIN1
g/BWlS7NLuKDYwV935XZGyg2dGLNLOGr5tZVmU4zYObWv7aL886Y4rzkoR/x
8/xmO8uyKaIjEPjy0JL7uJCQ8Pc38b/5OF0veZLwiB+8vCseoKCC6rp+cl5y
/F73D00wQHmbqtOxJ+5oE5hp3kLO13aYSgsaZcBkapzD1khPXLi9u+0DqYec
d5Luj4ZJvv3f+wwoT9D0WPTIEUUa2u+p/HCriwFqk/tp0zzhuDDd1cqtTcPU
VTfnAzMYIPai9eSmgXD0lS7+ekKXhlUlUb8PJv1fby/M0pIjMMaAqZ98kobX
1G9JJ0czoOhjy9HO/VFIlfgR42dAw5qGRavyJwzgWjKa6HAhFm0sPQKvkvuV
brFBevYqA1gZJzbL1iZjvlFN1/G7NLxfb9TeLMwA/roska1HU3DIOIyR40pD
ifrjfIcFGPBIxfeRalIKqomIFgq601BEP/StCw+ptwVe84VLqaimenrlER8a
Pp2j3Tv3iw5GrYsl82/TUDYr5otRFA2PNHE2RjDpUO8pt+PN56cYkLe9cE0l
eTdK+04pONLBYFlJ8ONN+bg3oKyGfUUj/tRxKlT1bwMfUdmfVjplyPv+w9ns
oUbsFCxfSJNtgUVnYWbyEiqmrK4UClrVgjmcs0PPOang7Mh/eU6AilorB7M3
8rfgjuRcKd4+hMRv41QpaSpKyyxkZQq14GK7W9XZGIT7VkrHz1yiokvC1Lm+
gy14VEJxta8Qgk5QR9TJKiqKUZ48sTVtwfoteSFP99VDTI32Q4ptAw6ZSRga
UFqQ3UhRIuV4LaiF02Z1imkY0irItmhOvstXo3OVblbCXInCTv8mGlqIdQ++
vd6Kv8QTFNIPVgKf8UV66gANm85/Hmy+24ovkyo+cC5UQMCSPua5vzTs2GpY
EhjcinoKt0R7XCsg21PUvU+jEW2+y6YI1LTi4V/V0R7eFLgsZXitubsR2Rj5
D3+vbcOekyves8WXgWOl+cnmpiaM0fmluKy+DVcOhMowO4sgMe7ve5vuJvQd
cT0629qGaZHMG+mRRbBVWMP4zXATCu3yqxnuJv2SMCvS/2IRGNu5ZarONyH1
QkhX1ngbenEIbJB5VQg2fBZdb0kfMHXt8iqe1XTMeNpg4LT1GSQNr3eWvduM
f8KFAnmN6bg33at/ODcXsvt9TUcfNSPv63bzWtIPC64SnHJSygUqt1uqaUAz
mqhvdTS/TvrkIk3Zo6wc+KZltqo5qRl1mna/S/Mg/fk52uN789mgUxg7KdnQ
jCFfeeXGs0gfHrv+ZIp6FuRzzfKq/WnG7IMSzTazRCejt1rrSzqUXFohV8ne
giNJJTP4h47ShWnV8Y/ToSWMw3WeqwWNDGk6a5czMOCD3B1pwXSQP9FhwuJr
QaG1ny6kCTDQ9HRIm/CJNGCPLnD+tqcFU26oHXdVYiDvtoQVB3NSIJkuG1Qk
1YJ//N45pWswcK50TDJLJQVu3r7bdUimBXmNA82bTjJwIaTMEcuSQWTZ6864
I0TnZ7nt7BUGCvxeo66zKQmOf/ZZV328BV12ra3g8CZzYgTNTepDHAy3FBSU
6LRg24m+1oUgMsfd1F6I2hYH9bck/W6cJDrczscmohlodLDtfoRBLKhvahJR
MWjBGbujJwtyyL7W9r9O0aLh5cx2h1PnWjAk0LzLu4TMca//pq//FQUJ5pcF
dhu14OTJC6Hna8hcqXy61P5AFDiPrEsVNiY6dcW1HzuITh+/6XRGBDzobOfR
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
hoP+4RVln7bVoG+Q0rGqpX0ga9rxTEMmFMQc3VbLCdbghWXmK9KXER2O9I1S
WiEwgkHW6ltqUO+r6aTu8j4IOUXRWVYVBEWFD8pjN9fgy/0x+q2ELwSZ0L1G
AsAl0XejLOFSUkcl1nD2AVtlXmX/cn9gTbwv4CPcRdf3iijhvv/E9/6QeAJs
pzJjjhBewsUcWkG4+6vnuu9O+sBgKWMum/CQn/6+tUTfRZjdLMLpMbifvzJs
QuLp+pB0Solw3w1uBSsiPEEowtHekMTv/urTzgASP++v9beOlnkAG2URY7bW
YCXr3Jdsjj5g7RD7fTHzIZiuXTcjtL0G/dobE8OJD/pdK+g2m10gu+6twXIR
4ttLmQs9bH1g+pbHJqv5Cgiddf67W6oGz138eG52oZe8a8WVpfIGIB07+S9t
fw2KZc3quM33ApsM9xodOxnwHdsZb3mwBncJRqb1zfYCVdedK3/JBXQUPfi5
QYnUwxJJmU+fiY7L6xj2tbdR+cuV9S9OkTiLam9Q3vSCzbHAadERPzR68BAD
fEhemfKX66p6Sb/bvykOAzAmsD7zbxDxs3nU6l5ZL7QNzNXZpgThyFcJv4Ko
GrxtvHJ8ZSHREZp5slYmFGfePNBlZNbgH4F9kJneC9mHpoY2LolEm3g+2g86
qcPtKfYtfr3AFW+cNl+fgPraNw9tFaxFHqEq4yL9XtBQKatwNMvEFKEzDnu+
1OJpn54055oe4NsTLlBWVYr6x7QtubUQrVheASHrumHkm+z74/WNaMqhKslu
24hXrvs+r7vfCif4frosqnSg1hGJmVsprfgu79BHya0VMHdxnlvBpAOH/NdV
uha24qLNLUXJNgrkK1f2KpO+StbPv/NuPfne7Xa2Nb9JgTvfHgdRckifZNZm
cG6oFQ/P/7O/wygH2LJWZD9PJ1Lr12tGbmzDdfuuKJy+XwZ3dewlN3Z2olHj
deU1AW0o1XT/xPXJYvh27WC/sxATHXd9P3jUjo4mTgJsXpM5oDxa/q1Mhokc
LjLTA3fpaBD/rD9DLweC+aLOV2owsePpjjcWPnQM2DQJ58qzYcpc/DOnHRMH
7fdKGqXRMeJAsre9VxakKczV0MjcmGIXJJI+QEffq4nL3fY8hWtaA7yULSzU
qW76SgUGOuZ0pPsHp8C64bwzb71ZaFMe1z25rB15F6qXFxwKhqjhee+pABbK
74u69GJdO84I/t0o8DkABNhBihnGQiF3+lTVdtJHMT4tM8z0g5vr5mQ2J7GQ
pSu8SluhHZX36jTrC3tDdHFpOK2EhTF/2W4X/N8XDbziueB0DxRPLi6R7yP7
bg5ru9VJdPL2Hu8BU1xU05jIHGAh72vLh9YviE5+Uv5ssQ0qrhtI+PiShe6H
ShyPj7djCkcK950AR2QsK+n7MsLCsYjoLa//kP4t/mEvvnPB9OgfRVMfWcix
y99AW6IDpYs7nllneqGGNcPq7xQLudQm0vEQ6WObLd815XvjBO/t4LfTLFT8
qGi38xjhEUqW5kW+aKdl4y3yjYVNQTsD0Ij0w2+9aFcLA9Blidxv91kWDtm9
+P7dnPDt77r7c4Ow6+P0vuI5FmaHdf8RdOjAmPa9us2nQrD2BPfOJ/Nk/S72
lUqPO1Co84iYjUYYbmxp8Jb+QXxLdNt1KITEeY/OX3o0HFfVS3/NIdy07egq
ofgOXMjZUPj0YARmTbJkvxPucti38ddT0m9nffiiLBGJ8783iaxbIL75Jlxo
KepArjqewcfbo5DrmWcgG+EC6vWvHtWQfQ/pWd1aF40fyh6rU4mO7zLp09It
HTh58UYsL0cMZrZEC54iXOeiLL2LRfgDFUejuRgU8NwxVkLiVx7ZpnPpVQe6
B3B90h2NRWWTXLvx7ywUu6nw/vU4uWcLz7d/Y8VhgtZW70nig+OwZZb+DFn/
R/SARl080g0f5F0mftZa3WRwLuvElJ3+ruxhiVijoPqA+xMLvUJeLW2RJPcm
y5/2PTIFf1kq6NRPkryO/tvXLdeJGXEGKtGcqfi6cIM4TLBwsCR8slOlEwM6
TZUjXVLx3OSlUwWkHqRJo5hwthMXEq3kcozScF39+9mDvSx0buRnBbp2YgSe
Mzq2NgMPGG4t6nzGwoD9Tce7W8lceansa5NFFpppTLNX5pBz/Cex35TViay8
E/tjmrOwsKB3xa0MkhfbJs3RwU6MabxfMy6ajdffWERaxbJwUkVRquVDJ2af
Tm3/OpaNPaPpZ0U8iM/GtUfYVnWhyY1P7UMmubjyru2vt5osHLHr/31Suwv3
uga9vi1bgKajJ2zGgYXUHSvv7j7ThUY/F5buCyxAsRp58So5Uoeftr+fvUB0
eL6vvDpegFPOutu6d5Fz+erXcu1qF45Z3x69GvEMD10an61nJ/f0cvDEoG8X
yhfbtWZOFeKv9JUqH82YaKMSq1ja2IWZUd+cQbUYxQcytw7pMFFM/PeNN4wu
lL42ndRzrRibmVrxVw+R9+SRg9GSni58eeqdi0REMe60OB9mwsXEBYf31rtG
uvDS4iOtfWPFuEv666ngrC5U/mzTM/+b6ISaOnp7lCBDt2BwRW8nCkSatFXv
Z+LEWLZYXnEpPvt7N9l3mMwz0xd0tkQx8QaHdJzrh3JUVbk9dq+mHQXeFwp8
j2dicHiqfeRKCta/ahxZGduONlkb1VtSmXiyb/cdNwkK6tmo3uU40459Srpv
9AqY6K62Y7LGjoIM9jvZV2gM3KlxhO1XIxPXb1hr8mOKggvfsyvfBdExZfef
9fiFibZS/C9CxirQ/nNNVeVICwod1vaJF2JhQUEVn11xFfInHfjeWtKC4htk
actEWNjYYR1U31GFd69v7XPzasEduScE7URZ+HhVzO7x91V45fKj3De7WtCr
wEpOUpyFl+aZOwq3VuM9roy/ftbNyPqwTdtDhkXmvrKdCj7VmOhh+G75i0ak
WCo3OKmzkJT34cOnazDvUoRSkgcVH81VrPG2YmH/kNXw9bZadDBcemeFOhVD
hmcnUm1YyORXvnNipBZveE2X7+ai4s4tARZVV1l4Va38xdyPWrx6Ud+bYwui
7I05g1fXWcgdkMRL2VWHvnFal7P2kH49i5/v020WHs4/UfzRow6vTv5r3SNV
hXE+mfyHyfehOKny8NZ99Xh6KKtfbbII0+Sqy8JSWWgRSt/rboG4wGv8UulK
EU680Xu/I52FKr8YY/tuI0oX3mZ+Ky3EgLGdBc/IvXl6TiWwwAeRY7ft5SeR
pK5rV09VZpH7FF5kuS4XMftqzydOgxwcKqnmjClgYVB++3b3KcSx2KBUemMK
Zswb8z2sJPebuT55SoaKbA1NWYtxx6HWudfzLYO837+ilKbiCf/lKXfLyAoc
9xWcYbazkO8d5yPJVCqaPtfV2S1yE7IVE7irOlhY6SSXYZhJRV5hT70zjz3A
pH5W2r2LhX7rpPStiqjoG3FseENhCMjauS4b7mbhuu2u7681UvHPu9no6P0p
wGUr299Fvlcv+pyjucepOCKTqccST4UIayXRe4MsFA74l/18kopqj59t8BVJ
g/obXXLCL1i4i2Oo0XuKijE7b1ywXJ8BJsvuJ5qR71v1o7yhlFkqujin3XSc
yoKigUvCJUMkr317f5WwNaC7wxC9yL0QxMx3F3qQd87Sb6W/Cn8DVrYL1G6Q
LwIXh4L594QvX35tu5dAAwpuO/zndmERTPypen78LQv1aiWbCjY34KHoW5rb
E4uBN1BYj+0dC02Mb/ws30b017/LHL5ZCouhnD1yoyyMc3gmESPagF3LPkuE
TpaC61Xxh/cID/mkfX7t7gY83aG5f9ikDARa/HMrCdf30uK6IdaAjOejNxX+
/53ZtPT67jEW0kc+Jo2KN+DUcDm3ZkU5KJ/oYjMi/IdHv+m8RAOGfVL78H4P
BZx21S31InzlNUWjL3sbUONuYN3r1RVwoD1Gt4vwt/GukeFSDTg59/zKgYcV
8Of+4cApwu04NpQc3deAt498SuabIXP08h37lo+zUKmyu5hJeAmDT8/LtBI4
3uTs20J4Wetadw1psl58hZo7qxIcLcX9JQi/6SHGlU54TPvD65zKVSDu0KUk
R7h/hLXsOOGX1q5jCBRWgV5TpOpRws/tkpzm3t+Aj7Jqz5RurYbK4AcxyoRH
He7atplwqoIrV79/NWj98Zb/f/2658mF/6/vuqk7/vBnNQzKFmz/Xz/g5/yT
MaJvukTyfaFVDWhZfDn+fzwteWLRqYQ7BrfzWvbWQL8elG4mXJOuSlUlPFtq
q1sS1AKHyXHDZf/rs7qmGCRfm3WuusZ5tZByI23/J+LPGvX2pXKEJx07lh7H
XwfLb75R6iD8cPLhKR/i51CWnUXipzoIaTF6+ZBw/jd3OgeI/1zfXL8qXqqH
MS63c3qEb9jzpxTJeQn+TppUY9WDTkvpxo2El/DqSfuQ8703PWTkV4Jg1HBF
P5rUg8GmHRfLSJ3M1NaVTVZQ4dFY2sdTpN6kG3XSPYUacK/PN8nOaSqEfUt6
85XUZ8QOkXMWpA65e0+BmWgDRJnhhD/h1e75D0QEG/B++dXChNAG+MX5l+cZ
qfOD+xeCFTc24JWtKtZaVjQwOGPAlvuafCe5Dus+X9WAZZYb9bLiaDBlvAQ3
EZ6kaKf+lIvUQ0nRXGkXDXamlp/1HCb9SFT41dPLGvCYppHh84ONcNtk0ydV
cu8MWnZ5qy5SkafORV+arQn6Ni703SX3l4fitdJ1morvrObW8jxuBrOEWvHi
HhZOi7P93tJGxeOgKL+nrBnuaaa5VJN3Q5bH6VY2jYqh++Y0p981Q5NZ2to6
FulfJrL+8dRRMeX6BZdb0AKmP+79KSDvT7WtyyXbYiruervodnOuBdgHv8co
kfdt97mW3zoxVOwt6Rpfo9cGCw8uXVpJJX3ixRsZsZeomH/kn/omZIBT21eD
ZZkslHriodIThTibIyn7fIQBQpEDX1TIOwwRO/TePELkWtlto8reDmI35s/d
SWPhreKu13HXEZ3c+DwOqbUDx17B8x2kr18tE2uxRR2RV0jJ53ZTOyju5WZu
jWah9dRFvwPT9UhZXjtrSOkA/ZqoP6fJ9+LxYOynQ9L1OJTgeezO5S5wp7yz
zrhE9F+Gl6g61KIWfN7lcKcLpOUXjo8Ys1BBjE994WQtKjo+CBII7gIx7VUH
1p8n93QxVEtTuhZPPH7NeljXBQ9ym/sunmEhJ9vp58VfyFx+cOBRMj8T2kwF
071IP6VhIbznqW0Ntg4/V95WzQS+Ara/K6RYOPGHj3XleDVmP/5l8N2MBb7N
khx/Jki/cal8L1tpBe5xz9cbsWWBzVXN6K1vmHjv945hV+8KpPziF3/qyILJ
ErHRPQNMNNznsM/jfAVqyljerXVjgcCe2l3srUycrfrweesiBb9arxYWjiL6
y268L3jKRI2pdcoRKhQs+Hx5FRVZ4OLLu2PgEhOvP7r+4GVRGSqFXq3XbGLB
nyGLjMizTFzruD71gWsZNs082p3TxgJWdtusIunLPu9Z4pusWYZ63sIbf7JY
YLdW3U9dgYlRa7ftPTtUiifDvup0vmGB6YOKgCPrmDhzij3lwb8SfHThQYzG
PAsW9GxupWMX+l27Hqm+txgz/n68bLvAAoODnrvelXVhi57m4+tfitDijeyw
5S8S5xG15Vy5XXiUW3TtqpIipBw7s3zqLws41l36xxXRhUmLayUSDxah9qHU
ylv/WMAb8+TLKOkzqSctU0Q+F6KbDkq+YOuGhWy22qdupL8Vm38wY1+IPwwu
20su7QZpkbvRw1ZdaKFsdXa/3TN8/coetnF0w9DoqodnjLvQ8a5ocPqHAlzp
bT4+STirVehH4cku5DZrWTpvWYBSNlTLwGXdYKEGM99Uu9A5RJlD7G0+/o3i
aF21vBtGuqYvCMp3kXnB/628cT6K7y5aY0F4/hBl9969XVjEnzy1uy8PbSRV
NaII5xvdprlDqAsT4pxuz2nn4dV6pRtphNsYPstZXN+FdrV/mYm0XOQS1Iv2
JVxfTV65gbMLOQ4E64rI5yJLy6VBi3D5iD3/bH93oqOnjJ1Xfg5+n1X59Y7E
Kcs6MLww3Un6tQgadXsOVq8+pGNIeP567m77d51YubH0/UBoNtp4v2l4SvLd
ec++u+15J1qsCHKis2ejmh7dsov4NrdtzfMVdDKnPBH9FeGUhaFnHxzrZu+G
mK05PdK1nVjrcHfD4beZ2JFt2m1J/NffujZGOq0Tpc8Z31xT8xRFN1Qk/lhk
gZck29kVkZ0oNPfpMOx6ip7aH/vNyfmGrKn+3urTia4rTsZrhmTgsWeXOtt/
smCn562X83adKD/4lfHWNB0ZNx7ffzXDgojlj/5sPkTmo7snwhXmUrDsyOIl
rmkWTO3XDf+2qxPL/NNra7RS0CQovHDFJ1KHM+x38jZ2ojvloGizXDJu2D/P
7jfGAvfUteoNCx2oH3LuArgmoPRSIQev5yyo3M4/61ZF5lzjeP7msShsqdgg
5VZIdLpuhJw42IGsU1csuq96Y/nt8TfpaoQn7hvk2NiOKVaJRebSATAlWep5
jb0L7HgDavqC2zBpvKlMoLcY7m5Q0H2j2wrOo1mbImwaUbjggeR311ZQ0tub
2v2uHsTUjTYtKNXhBK/XYrVnD0i7rXcLyaoH95vdwhu212HQD1vesNgeEOvR
zbW1q4eiB8rF9mx1yGZatxIKe2Dak2/Htfk6mHy96URPYy2mCBbwb37ZA8MS
9jK5q8h3tjhil4NuLTb96HJhSfZCq9GqquVHaoD3Q88zIbsabFlP1RPu7AUD
FbtTP/IqILvlvJbrYBVyGCieD/jYB+dMd1g33KwA0z85ny83VOG6DOrA6K8+
SDu2zyT5SAX45k+v9sqtwplP/PWrVz2H7/9uKUW2U4BlaSMT5FaFp5tFHQfF
n0N93o1NF6fKQet2okLBrioMM2JKado8h51/UwZmpcugjSOyWOpxJU6dNW9y
eUn4OaM3t2lF4Fi9X3CpcwVuK5MdTo3vh/1hFpcdgotA/8WZuT1WFWix82uu
3dN+6JQZ7bI1IeuTT3IGGFWgoMdU1OrCfhDfkmPdNFUIC/dmNdmPVqBBW+SD
7oZ+UCoMkk0zeAYzzn83V6+qQL9d6g8vj/eD4Jy/m6ZIHvgWJkk4lFBwcren
rOfOAdjjIX/9Y20uhHzv9ziXTcHr9336MyUG4LdWvdiDc7kwaf2u/14SBdeF
HzBMPjAAtwKrR5ye5EBb+8Xf9/wpaON6M55HeQCutlcl209ngSNXYfL//wcT
Zy9IHTUaAG7z4zc9SzNgxOX0EZokmSdHd68yeDQAhicuHorWzgDTgpIm390U
1PLtZ1R7D8BqN54S79F0EDIvtwwSpmDKQtTnOb8BEK2K0p9dlw5a7OqehvwU
zD8nM/subADeKZtGDzmkwuCbf4rj7BT0rt25PT1lAM6xW/pnLU8lfb5IRPZi
OaaVeWxMSx+APl9dCdXEFHDJ3CqV/6scpfBS8s3MAbDq4czoDE+GkYSmVufZ
cow47zwdmDcA4jzr3juqJMDIkenhNZPlmF+wzz2hdACuf1r+l3YtHthiP0W/
GC9Hg7i0j3vLB4AqNTWbHBkHC2L1zLHRcpyKe7EsmDIAe6M2/OTAWNDq+Vew
/x3R599eTqsYgMkJUcUv72NAy2mfMXWkHHXCWK9aKwfg0AROGfPGgOlE+7+Q
N+UoGK59MalqAPTPex/Wko+GhVUGTemvy3F50mdBjeoBcFwmeLb4chQ4UjW6
F4bLkUeeb7Ge8KFCEbsI70gQe7vjZAjh8hOCY1w1A9C2VblwOj8CQrStra4S
7itpWSLyP3eT1q3rCQeh6yXgQ3iXsqzOGsIF9hve+vsjDHjlNnO8J/xwr2tE
O9GvVJkxzRcMA7HTwkNPSDyDlbHXjQgfuXPgRKtyKKR8kJlxIPFTCr/XlZP4
y+INrmlbhED27nqbWJLvu1u/LUdJvlyxu125zgSCvPJHsQrim51NoW4h8U06
PchuyNEfimyEeP/3OX8064Qk8Xkmb/0+mcAnUFl99vsJci6ybA8rnMi5DC5/
sVm34TFM2mz32T5djs4SwSfPFBKdN81XJ/a6wuQqF5nQv+Xo16ySYZ0xAGwT
ForzG46jS+Oeww0SFFzgHmfUe5JzXLfs4mVnExSqvfbl5wEKVmsuBqU/IPz8
orj7ISuUV7sW9/gwBTme1+Xo3iXxHFk1IiVyE1m6MbeiTlDQWVfZ4as98W2l
ebRVsQdyZdGvpF2n4OCGXj1ngwHw4jolVyUeiqyiJY88WiioeIbv5Sn+AXBX
LOF8pxCGk0PnTv/qoWBt+qr97qvJPVqYHttzIhxH/phtaHtDQaMtjbedOIhv
moEB269HYlHPZLXZLwqKla5MSPvaD/KRn56+boxFAYVG/SiZCmS7+JVTmt4P
tTb/VLYZpCLrfsn2P+Xk/Xm5x+e3XT8ciDOP1XiWi4McvVN2vyrxXYmoe6jP
c8gUm/n49mgeimn8Tf+6pgqrE4WUL7iQd0xhUZyTlYcs7hS9etEqLNsTvn2G
vHufn6tOfZ7Nx5jL+X5Sp6tQeU70g+fx52ASLPFI+FghDl7t/Wj+rApbbtX8
V6G5R0OdhnHcLbpt6lCNUnIpRpfF6kKmn9gZtyilwmHJtLE4RSONFUMqpDKb
sTVjqmFcBuM2I5HRMxS5zIX50TpbqxqUwWq6F23t27+f8573PM/7PO/3fJ/3
vNR984ewF0l0hmKuAaRpDc5q2l2YDNR4VZ0ZxLgHs1lmz5qgu6wtkYn8axOh
IM3VA8fy2uQOVzhSEPRTs+yJUqgKcVtMOdSP3RxlvXwi7IWEjbcOCx89AP9V
V/zPJN7H8nLVs8vODsCg3xCrl9EDLFGhXuiiSszsqe6R1ssD4L3FNH1xfg/E
x7KrW38RYKVuuQZkNuJMs9tuN3tARtx9cVxUgZUqDXmf6gagPpz3OlrSA8Hx
9oSC8HLswsfenJHHA6jva100H3tgmuTiECrhY5GujTHMzSoIaz2Js+J6gfmN
cjgKu4HpTbUHTt1RwRNG0SYuuQ+kvISwybdZWLPHXs1xUIHUlOlYsb8PdGjE
6xVlmdh0bT6u7FKBed2Sfl5EHzyLu5inbUzHPNYcIxGHVCCwPqofmdIH65Zf
3cTmnMIOsRNF27UqqPe8FG38/f8Gq+WPR3R/7OW8Ja+FFjhMPP17ducSGayb
CHbjGDJg7vn8kc82OGj7Y3u2rpKBTrux2LM4E8ozqQwrexxYBsx/125A/iHi
vYm3JAt0pvXjDJ1xaN58+QSQEG/T8TunyYaaheeal1NwoOvNTrjGyyBBk5+V
s5QJMyXJku1UHNz9Hcvsur6/z9dORulfh1cLtv6QcwwHGU/6laqSQTApg0Ik
sMFyZq5R8BsOdt7ajrwRGWgjbp113sgB5vs6SugJHC5lil/wPsjAridBZLmH
C1x8ZHUKHYd1nbPmY+uRb6SdVDx04wF1vPAh5Xcc3kUSA847yiFsbHQ0VMqD
Qyk+LqOpODgPB/FNSHL4tJrLIXgWg6/nDnZ2Osr36G3CpwPIZ0rOWxAoJWCS
LTHPZ+CQ840WExAhB3dWrlFYVwloFqiYRzNwSLhN2Xk1FvlGruCBgswHzgba
PaNMHDIWkivvn5IDNzApOvEBH9q2nY+jIx6/trNXnSEHXoaHPtmjFJw05eFN
iEvn1jS/ykP7h9CqfaEUHk8nh7Yjbl5Tnjv5pxwMFkXTsnaWAVtbYMtGfCmp
6TBejPLqTDuubSoDPz73Iglxhya+a5VQDrI7K+uvOpYDLv7RpxbFSbDu8j1x
B/FlhX5x1eVIF4ftplBeEvcUnlWHHCbW5wWl2lSAsVhysDsN1XH+q/Sgv1D8
1HYjiqkA9hcb28ScwUHQOrYDf458rHnJiF6eAIjWZAKOznnas5fjPi0HZ5+Z
1DmdSjjitStpwWnUb+J7zS910DximxFVOlkJ9tuCv2jjcfh5cuGSWKICvgg6
9r5trAazC6o3alR33kqL5sif0LxjMNYtXC+EFVlO+jdRn9DVnQoKSQGXbCxa
qgqF4G578MjxCByGDUf5z/eh+cKvJohOqwGBbtG1hABUr6jKoqDTCoixUcjo
G+ogpcB7XGKJ1vcV6ZPbFUBQB5cwtjbAqsHYWovVONIxkprUqwC163i9e0wD
UHWYFl6m6DxTb9Xb4gowbHHJFXIawG1kBa6eh0NjXWCqYkwB9l53ay98bYA1
byfiyS9UkEMIDY8zUoJe+Xj0gQ4RWJvsonb+owJTXbn/jLES6mX/Bae8EYHd
aUxkhO7v8A0XTRRBCTY9b7YFWInBKd/XSdWhAodr7mmWRCUMWu29b5gpBuEe
/f6QFhUk2Sfz4xyVcCVVTJuqE8PHYl1eSZ0KShsnlBVonnV12b48c0QMJZ+3
hAjLkJ6Andmj3Up49yvDtntxIwTeSxIlFyF9GOoq/OCjhIxFjvbtro3wP543
DTk=
      "]]}}, {{}, {}, 
    {GrayLevel[0.5], Thickness[0.005], Opacity[0.3], Line3DBox[CompressedData["
1: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
DrHYVcl7tSnQ5D9u4CNFoP8Bb39dPw==
      "]]}}, {{}, {}, 
    {GrayLevel[0], Thickness[0.005], Opacity[0.3], Line3DBox[CompressedData["
1:eJxN0FlQk2cUBuBoRDAuEBCwtgJWCoihkSUFWTw4LKaoaCmI4Ia0QRRKCQYb
ZQm4IBarURg2RZSoGBDFRBZR+JE1hjqRIghhy5+IZgSxioqlDjY3/T7OzLl5
5r14z1ke+WsQZzaFQtmkWyplxogXZn64IyWs7K9UlQ6dh/+58iaHJi6XEhGd
/a2CTuxpjZdtwkqkBMUpnxvcgt1bSmVIzkiJ/A2nCifE2LdxNXvW75cSS+I3
2sxLxM4Wn/eatpASH3eXKYQ07FYuz6vOZ0gI9gWbPEPnQuRG6k+9GYG3CYME
W73qQ/m4pyapiDCsIJZwV4dITuUg37K/4qNDVinR2xM3f+CqEPe8Ndxr3HmZ
uPQmel6I00nkKpb5OCc1l/CmvfurUCHA9z4V2GdbHiW8o/bG/jQ/BrtdMSf6
Ng/SjqxMLvPZSaD+jXVPKsNyQKUZPlbUnoxcuO/rDtaZy3CJP/6C2Z2J8wpR
O0UtBoPJN+UBm84h/3udyTnjyUqovbDY1WA6Dznf2lLrp18FjyeaDb6oL0Ie
EZlo6XX6LlAeRtUYGpcgj3b0+8NTVQ++8Q0SC6uryL2pVqzfgx6Ay2zGq0jB
deQLzMOXbpA0QzzbzIlUliO3DqWOOo+3QmWY0Ymb1FvI98yyjgrYKQN3GukS
534b+QqmokVVIof7OypabnRLkJ9dqM+yM3sEw7JF0e5n7yCnM9z9GXwFtGsf
mWR7VyP3deOI2p88hmvDxuOZj2qQM6YDHog+d0LWOzrB5N1Fzut4584z6oKa
2CnzWR/qkL/cbp2+0vQJkCqvI9Ko+8iLL35oPWHbDXl3FTE1L+vx3+T6sSMW
PZD2y9l9WWwCeXOrR0m/1VMQcvTaKsIbke8+LtDfbNILSlHjAou5D5BrXBR1
8aO9QC+NXPT2IvaGY1zPq/I+iMvXprZ5NiG/wY/ZFyFUgqzn8PU8GXYlkMI1
7H4o+jaOyAtoRn58rE6ZP2cAaK/NmuUK7PyT4zsXlg3AorL+rQ99W5Cv4k0a
xQQNwuJnyqc997D/bOzanTMyCMyDdLfnK1qRX8vY6FAfOwTshojt/KPYLfVC
+46+HwJvF0M+8xl2nzSDjB9jhyFc5F/g5NaGnGq+w2pEMwwJJev6G05h7y7m
TXjYqcBYa3LvWB/2yEDhfNtQFcjtxf8OfdmO/KB9A9c5QwWOylch0buwi+9T
PYmbKpjg7Mgm8rDnijqvZHSp4JuQG/80dWC3aaHb//BRBeW5wW3yz9hl5c5J
o+YkHBoYYyUzZMi9WK3PEpaQ8OdabrWHA/bwwdRlUzof46vfTM3wk7Ouf9Jf
SkJRpLqAz8ReTQoOLP+KBLfTtZXxTthXrKvdssGKBGlY04JgN+z3KlxdkuxI
cFSnm2p9sM/x2Xvpk85reKnLin2xZ2SLBlNWksBwNdWE+GGvrUnpENiTkMjk
lDb5Y+euDz2YziAhxkZpVvA99r5tBabJq0kwes8VrdmM3ZSZWTCl802Oz0+P
zfDcudzXfEcSqlb5rinegn2MFktPdCIhZy29gxqEPU10jRnjQkKCqcfIw2Ds
goY5flqdv0xiyw+HYJendDE4LBLK976IW7UVe7v79IFd35GQLXGYzArF7kH+
1qXUeTr1s9JjG/aUlCK9UFcS/OurUkdn+GtNCq1L5y29UerCMOxvtbbqQDcS
yEDbuQHhMuI/sNB7/A==
      "]]}}, {{}, {}, 
    {RGBColor[0, 0, 1], Thickness[0.005], Opacity[0.7], 
     Line3DBox[CompressedData["
1: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
ySc9bFUjHLs7olaKAUALuF+3NUaf0KwmjSu/aRFG2oB39tkA3IcjA75TrQit
a5FEBcOY0A716ugqBALNP0Sl8Bd+75i/77CnmhLav3bjOC0856Qs5v8ZxO/j
GFN3/pQ9hBHhOyG/JxAEBS/5n49xCE1WSaNy6l4ikFl94u/hQOCdKrnztN+W
0Fo06tVnWRKG8pnqJR7or+yUBzmH8f5S9y1G3prwtotcCPJGH5cP/PTcHt9V
i97f34zvgBeij5f6BQLr0/LdYUZ4v9WvKvxqje0f/7d6EuNpCht+ut86Smj0
v3N+nz6E5xqteO5xjF+q7XVoHd5X11/jeT/jEKGXVY+jA9ZppCUy/Tref/67
+PfwkC0RLnUV/W2O/SpXdnH0cyM0rzVSsWp4v3hauaxnOfqsf21h79wJzX7W
sWYzB6xnoGiLRCAwVkVCirwH9fsdhs5+RwjL+Tb9TW8AsHUeS5/lHic0m89b
3jzF+1H5ajPZ+ACg35y8dUD1BL7vRbwz8Z7F030uyT8QAKwbC2h9negzjLNu
bcZ74tN1ki0rMY+YNTNCDt8BUm6h/UVuhKOvpaSC3w2h57T9q5PxfVkioyl6
6DhhdV344R7uB+xjG6xaVfEe3X5ryXOxE/g+Z96wZfoB80LGeSnwJtz6LQyN
AmyHPcVvAa43tpcxq4f6/nTsZJ7850k48ZErFsr6AkNFVP30G7xXcqXHLKuw
nX136vWdvYHuE/cwbS/eE6Wqx5scvYkw2r9/z+gpoLcxX9u3oPeEjUYswns2
6+i9+oBTMLTXe4svD9/r9IErPWF4b55Fh3/ck5Dw4Wv24Hy8lz2bd170SADh
tZtw/rPzBLbPo2WOTvh99qh2mysXSBj/bS3ht58AntTFaEEFxit92MLsxu80
72DQedYJGOqxu1+tTX3n1zVbW50mrICubZpzjwN71d+6Nry/sCSGH11VDSYC
gXRsk5YbtCjGpt1egPeXRdyvGpHBhLuBczhghivk7L5+Y9MqLuGOXdkp24Px
P3ftn/LaGWRvxcgxN2B8n2vTNq0QvDV9OpmY7QSsogtmPBb6xnmHClNCCEvz
cJGDuyNIvmmNDNPHPG2LRS1GQghtfNp/ZeuOgkeGq3SXEcb/Mj+8gR1KWMP3
zKrGHEBTZfH+ZDaXCN40/tMvQH/7lFtcZQ/Ce1F/+eisphl7oyTDiOB9ecXr
U4eB3nrI38AY8w+9FH61DyMsxYmpfuvtgME13rdpF+bJfMjwvoUuYJ5pHuJA
V983z/BtXOo9HbJoaTi2P7JE1OoQcDRWSqltxPy075uf+YUT7voj1ztb94Pw
SXyjujLGM0K8M55j/NJIybOsfSBY3KwbvxDjW5sPe6+PILSZsiVZZZbAPDkV
Mvtw/J/VjKl8jSDcvmctspfMgDE6x96tCu/FfvXNf3dHEprdGcWAGWwY+o/+
60MIzlOLVfydG+jOan8rJQ1wncyx/zIN46vIC7ptFKHF7r506AsLOFMXe6V1
BRLWULS0aHs0vmv/eUpXzCcem8qfvQ/E9fn1/oP3N6ifg6fvD2CZE456/reJ
3/je+h2iPE0kFu/LtztzPC1IQnLvn/Un8X3G0o3jW6PrrCuovGJF6Cv6pIyt
cb2+jLe8My2OcIMuyFk+2k8EV0Ll+AMnCeu72uwLh+MJV/lAng/bjtBD3iy7
th3fzbn/yV6ujiesoIHYLZsPE+G65xWrk3GfOqYlBk9NIALPUcvXi+0JbzI6
8sw63FdrLT2HrRMI6/bM5JoHDkS45vZowxY8Ny7v3Jw1ScX7b9a+h+9wpaTK
w/3uhHt1Lste8RwRhGi4b/R0IlzDmd3/TN0IV33REjA4R7gfFj5fM9eZMBoM
PRh0fK/RzW5qU/8vnnnjzA7q/NCqSpfCd5lwY0vcQcA8OTqxw3z0S487vcuO
EIZcZAP9A/pdvvXdTa54jmiUgRaew/vyUxXWnCe0yta7KrOwvYD5RdJ+eG7P
p8/h7jlPuL3K3jZubkQw1hYSYovvJrH9x494n8f32d3OET560WAGb7EV4crI
zrzXgH7voUf5Njw3V580YLuYE65n9qNtwvNEsOha7dkT7oRlo3K0oZiN58Ip
DS3RRCLoLjdelYL93+vo/+Dl/1F05dFQv194EKmQFtHGtEnyLVu20p1KpZKU
srWhSGUtZUlMQiL7vo997GPf3bHvIoVWI4lQKSmV+L2/f59zz3Pve9/3c+/z
nOOMY8BOTPAu3xIClGNPJM0LCM+N1ueBh4gfWcMWLdYg+NdO6Q21BC8VSZ7/
qkD8wdzxoWuEZ1As+UM9wVmHh3eVLwF21OmPt3xCgL4w2NFfRvCi4y+uH9iJ
7AnJ/RbZIUAzjBPrTiB46uHvb0P3I9t1JA07SfzPtp/pjqQeH3Q62XMU2Xqb
vRy+ENyZennvIVJ/+3HJRjkdpP3qTfIXCgV6suUP6wXSB+1vh2WfGSBlH0W1
TysUKFVdhue0rIB22NJMUOoi0t5VeSy6GQpsv1mP/jeWQJ2b1rnANkZa0NkO
P28S735tKPqSJRgvqNGq15shjf/++rxaEm84x1O85yZQ/7wKaXlmhexLI25U
mTCgnSo4vUvOAoyTrjVenie6cFXEp3WHCT5uLVV1nPjtmFt8O8hcZHQsv2F9
MQzoR0N+XTlnDvQ208dv1G4jO97nyaYnYWQv6YqL7r8KLGdesdo7Dkhdb0Zp
HyLxJ/2XPay+BLYGG/dR7rgh++/868024UAJ7tj8MlYZxOLvJ8/I05Hi9yJt
oyvBL/hSq/w2g8WhZlfLDDrS+i/s9nry/78LDPvOeCuC1PEj9n8CHiBNr0or
M53gM4d/ja08iCoh3cc/0ohv3NCa+7g/HOjvrHZKeRri2EWZ7UVpD5Ga8E5n
33sSLxSoK/TuInLaZCPYSzyQUl62/fYkif/opPpQ0gSNpRsElJs9kFNieNJ5
gcSLy9TbFZshJ6nCQ2KjF9L1ep7oUCPIvkLWreM22HLqYq3pDYL3rdvnuT0C
aFx/irWHbZHx9p2KfJEXskPUOEa7IoD9/PVI4jaiG5eeL9+m/ggZgRfNf6sR
/NaZNZol9sjs6OlT3uyNxpZmng46hOc+v7MNN9FvziU7Kk4TfGGJl9Q5kvdT
1ifNi/dwLHfdUvn73siJjwyMNYwAqnvAzNsKF2Tb2f/FZm+k+Q5xBk0iwDgy
vtPqvhs65u/QLvvojZS4GpcyM8K/PcpxwZaOzG025RZcj5G9rC7Z/DrBzU9Q
1bc+QE3Dxq1lOx6j8aYv5/VsSV6p7Ov/+bmjsGlKBr/yY6R78ukH3ya4tqeR
ATxERkNK8mIa4VHxri69GwFTwli7+PtDnBXzdcrUIHjdb8l2J1InHkzdlOqB
A5ZHgz8SnOE8K93jQnh8XJY+MfBECi9HuuD/PNwJN7rcIqB7p3WtjIAXim19
9o5X5THRvxtDmt0Jj02t7if0wsCZQ4WvpEm8v/3pWs8ICFQ0PZF++xFSUs/n
7Fj7GGmH086wvSOAcWGfvNZ2b5SNi3k2wf0YqSdaD7X6RgD9TGNQ9StvFBOy
FF8/RvrmY97H8Y8A4QzXlxy/x9gi9q+/MMUb2WuuJWmHkbwmQ0PPvvug40gz
g/7xEdJ2znxOTyZ5+dt2uxb5oeZrK86VrEdI91X4wUwneedO3Yk09UeOl658
xk0Sv+jt2Nsscl6lo3uDlgegivK7fcbvvNBYQGvVz6IIcPw02PhKPhC9/Tvv
cvmRfgjeULrUFgGaD5Qc5tyC0Dtfkt4m4o50567qT7yRMGBDD1CbCEHvNS/u
9oY8QIZaZywsjwSL+y8TTiqEomPcac2ngg+QvU+oTWhtJMiuE7db6hyKwj6C
YU0Tbki/d7hTalck6Gz+pHuWJww5QhVSe+TuIY0mvrL4UiS0ON2t+8MTjjpP
EjQDp5yQURkhSLOMhKnr8qHStHA0LtasXJXhiPT/7s+bOJO8iTOqec7hOCX3
V+A0313k+J+67xgZCfQnayMCxsOx23WxjKqDLbIvLjw68SYSInN/B6QWRaCx
3krH6qXWyKnQ2j/+JRIMKkZyb7+PQLbop560DTfR+LmLgSp3FNB2aoWeFIpE
ykt7i0NbzJCu2mU/LR0FkUJfu3mNI5HeXLacFXwa2RSfGapnFDC9Y+SKxgnu
V3Hn2oMjyF6s2ucbFwWzUR3XhPijyNzRUV7nrYD0SaeFipIooEyIyOzdQnBl
USeHHwD0D/2j1hMEb02gTZ8huIX7z9KfWkD73e7+iy8apJzUnW9fI/iYu/Ag
F/EtenJqWluiQcfYtj7PKYr4FNaesBUmQAsdmjO+ROI3XrPRjIhCzoaLQr+2
kj2/5NHXZfeiodsu8ft4IuFZdjn6tyqZu1o4bhUZDd4XRQ96ZkYhNeUY92ad
G2B82HfqUUk0BCZ73VudT/CPedYz5lZAfTPBff5FNMguzqkKK45CW4uVHnP7
bYH+e2jL2I9oYJzQ3MJXFoU6rveiDdqI7ufmOiorEgMGQws/TQkum3ZaS+fc
baDmHRdRVIoBRsqYXmZJFAbeX/icMmgPdKPXEj/0Y4Bi3pn2qoDUb7Xpuej1
u0Df1PnL1jkGxv5zO/49m/BzdHVvfCM+YrParqy4GGAtepr6NSUKpzK2cQr+
OQN72DfH8GMM6MRxfw/zJ3jSwLGdD1yAQ/12qWtZLEzVFLLV6QS/2njCm5vo
9ime+1zyscCKUT/TYkPw51w9f1zpYGw9cTmZHgsqR29XeGhGofCN7hsNe4n+
Vnm1a2VGLNjW6N4vkYtCqRStIp5fRK87H94Fzwi+YT27XYz07R9vv4XFQ6D+
Mlv/TDIOhFPt6KmcSDToFz/oqEB0qmTFhq6BOOgWn1mkrh+JKrwvWdynfYF9
t/zCqcsJYBGzrubE+3BkVYwlHhj1BeMboksOhSSAcMmzR3WZ4Sg7jmxp5ydA
15yIH25OAPajTd9P2oWjyn5fdkQY0ZEzjUFBaxlk75doVcyG4djl4+9lGAFE
l4wdyfNmgHfPt6+h30Lx6of2848FAoFuU1+snsoATvC2yMtZoaiVz944fSQQ
jLWPCa6tY0DkHZUg+yuhyDr+5btbcSBQdH8Os+YIT65+SWxXCDJ4bQ/bOQaB
zu8NVJU7icDkFZsYCgpGg/8+nfZIJnruhKEdd2giyF4OX/i2PxipH4KbDnYQ
vbhzx2OBwkTwHlZ4GTYehIuyh9KT1wSD8ZV7KgPfEkFs35VHDepB+Dxk7w8l
FaLPkn+PhK1IgjEHtpzZSCCKdar76+sHg85JKzdfuSTQqZiwbfQNxKKDXNpS
/sHAsDEtFbmVBDS1c13jGQHIrxgo3plK9OLrZ/2pwQQ/0nWs6qs/dt9azD1W
Qfg/Oc5dLUwCjkvYdlsFf9Sc6T11420wUE/py12bSQL60PqqD0VPkOn4RKZ1
nPB3/nc5dU0y0LW/9r/+7oucxbWKT2ZIfE/VOL9KMjAcRZ9Rd/tiqPRgft4/
kndIXifAkMQf3pnz9LoPsmnmn3fzhABjVfkypXvJRG/8ubkomewtgfPrpPhC
wPaX8rsXCcnA2iqsMdLqjRbl1IYFXqILB6L2hDUQ/sDk6dNfH2H3EePcIqJT
GYIz/rafkmEq+nic3SqiA4rqYjXmSN6vl69dFUoBndToKzeVvFCg/aJuzvdg
6N73cq+VQgoYl0reMCf7kf/qaZXPI6QP1wXvPjJIAY54UY6PkwfyuwiXfa8L
BlsJifVDSSkQ6Lvp/M9yd7TlBDWWZRM9ffjGvFgL4Y/5/Szo5QNs2fEhQy+E
6PUj3/fpfiY8jsmW87N03Cd+cJ/E/+/LLlEPlVOBfU7f8auNK34o8qzcWR4E
woG/lRb//3cebbqDPe46YMNAhe3U4yCgTnn3Dk+lgvHqfmurqjs4kPJbKlU/
CGzvnPqdJJIGNEkGtXaRPYYKvxT5/ikQAsfuBJddIvhqa37ReFtUWfEs3PVF
ANn3viu7vqQBpfaD9I6/V9Dg7qGKB80+wC7XW7+MhwmUt/lnUn4fgO4t9f0e
gj5gfLf+0ratBM/m+mm+9yQwbl4auK79GGx1jZWHNAjeGF7DJX4WNCOEouVq
HwE76BX/Lk+CKyjsOF96CVrUlY6aWnnAVIOvQSElA2jym1a9X3Udug+N6Qr6
PQTGk1e6tuIZwFbleqp86iZQdp18Z8x0B47rqUv5e0l84KYDvHesyJzIK7d9
RgfqLYvlBfYkXqXcq6vGFmRFLUazvxD/OHt26RlOBhh3vl2voGoPLF+H8Wdf
HICuLjva+zsDGLcb08Jm7SEQtwxvGiP+cXfgE/bKTKC2Ky75kXkH6FJ+ndBs
BzovGqKeHswE9sJqjcLRu8Apc9DZft4GurtCZyYNM4H2YY1hop0DGB8csJPb
QHxb3av+G7aZwMkV/5L42QFor18V+dw3BYamZrRrDIk/7fGeUkl8rLLXyU/q
F0B4ZYWhMIvw/xYf5BJwApquZQPHShdkrwD/n/pMMC5rbj6jTc6jaW0kL3YY
aIOimar9mcCQYXU2PSA4S+rg5pi1wF50XbfzUyZQJG6FyqcRXMvZJYmhjgz3
v86Ff0l82LqG25VOwNbKPnvUUQepa6WrxwWyiM/e6nCzluA7ZhScwwxR551x
id3GLKA3p7f+KXUCaq9CheZlEwwcW8Zz9L8soqur+7kTSJ1B9gY5mWZIyQxV
stqb9f+/Y/gZ7kTivbUzVP9cR0b1TMVPTcLvsXDY+YgTCNvUOA+etkN2W9sh
OdMsoPq6h/4pcQTZaJGLhq63kXOTb/mQVRYwaNcY940cwVjJvmgo6w7KruTD
b44Ed7P13zDlAAxRq79CS5yRAU3vFf1IXqk6ofhvd4H2raReWsUF6WfOyF0L
zyK+/fpnt4t3geX1+c2ha67I8XAb+R2fBcaehQ4OlXdgavmlTf+ZPkCOtcVt
Wm4W0NziP2edtAeD0lrtHeWeqGPEqrvQSOrU2XLhaAfx/zIXh3o6vJC2xXIi
qpX0QaFf+VKIDVB9ZuvOD5K5sryOb28n4ZkOalt12wpUIp+OJE4Rv7BFaMOB
btKHlQbtQ8o3QXOj+D43ig8yrmbL5zwjPOylYX+GLMi9SpR1CfmibN/safpz
wqPo6x5oZw5MeemtN9c/QbrRmpDKF+S8nzU3vfx4BcbEHyfukvRD2Rv1V437
SLyTxpG1B03A9qLenuld/ji15+lxW4LTo3u+yC++CFLZ90aC9wSg8aG2lsn/
89B5L2no68OcdPjL6Q2BSLmiebWf5KXv3e49a38atq73TB+JCyTv58tzuV5S
/0ZK2EjtEbiqti7cd2MQ0tf68M3//1xfFCeTbBRhUd6dS89igtC2Sm9UvYvg
Y/dKp8NFkNYXXZ4mFoxTH+LMptsI3p2S4vwb0H5GrCxTMARpCYWRzXX/f2/q
FVO95/BN5h+PQs8Q5AwdHR2vJvHuAX8+cF9E+w5Trbm/IUi9dq/pSRk576jN
apHdptiy86MwZTgU6bHPXp7LJvG9hbtXtpP3t+361fzIcOS09CYf9Sf3vlVy
+745e1QZ3HLncxDRX7wb3sjvJ/3v2+6+3OohBp55fe7bB4ILUbX95bNgSulE
wN1YD+xmHrnJuycaZfNNhSMls6B78uO/Q0+JT1jXarmmIxp11vyyaRDMgkBK
hrv9fm8M3SzDM90bgwz1Sc8PA5kQ+HT0bcN+ck/36iT8BWNRR052XqSdzIdD
S3L+evjjarWboaxDsUjffD19ZXUm2PK+CdPtDMCqsr0/tVJj0Xj//mAXRiao
cGTUB+WCkOFgqbh3XxzS78T5uZhlglQsV7ltD9Eb+578+qAfhxxvi0vVepng
KPjA6oZDKDKmRSpbbOJQ54Cn19jRTNC87PiweWMYxo6Ucb1+GIfUh+cSuFQJ
D//Gz7cbwpCpVmkqHErwHwkHBKQzIfJFZ8L5m+H4Zt2VOxcZcUhT28knsJ7U
H/Yp8MbKCFQ0S1pbyoxDSgTLc5FAJnlX5qVPyiNwwwfhsFU5cdj9gPfM77kM
sierd+cSv8Ae9o+6TvCpMMPfnz9ngM7FGqnKxVE41jc/kJdBeKTeLPn4LgM4
N/f1JORGoaLh8Mq3iXFoyxO5YuQpmf928waa56Jxn4a63KcwUuc7r7AvbIIX
C4on/o3GQNoP9U7POAy0kF/OV5AB9C7vkvDEGOTEumi72xH+yYe/diWTeCnP
SpGjsXj1l6EjlyE51+JrzZahGcBPW960dDIWf6jbuhxZH4dspk2fokMGsA7X
bV6qGI9Tjaz7PD9jkWXH7mq0IPtFcqzsS188Mo/Ob3PoiMWpQ7f2OBmRc9mt
dv7nmICck2Ypty3JPcqejzm7PwPe2Bcabb/IwJQ1F+6HOMYg1WLHZ2X+DKJ/
9+sORSRirCVPcZsswY9KSCr/ZYJtuBLP3IdEnEs79ZL1IRqN2YsO3PrChBSe
zNIrcknozexWCoJo7J72U2W+YMKkfl3or+YkbJjJCxSqi0SO9suaq+lMkNJT
9j4ykYzG5afPiBtEYuBOQ/mwWCbM/rfkxFu5FOScPfWSezyC+IxUK7FgJmjF
Pfjj6pCCWvWFr25yRaCw9Nq+Ta5MoI/zCjcspOCHe18dOhfI+7rlEextxITn
vdPxdJ40dKkrqwi6Q77HsmbXiDMkr6uaePSBNLT/K/rfg1HyTg9SdARPMGHg
kviSh65peLbJPFScHYwc110sJXUmbBD+rzf9RxrOLY03Fz4SiKz9CZ01kkyw
GH2TRO9JR+MCiBhUD0Bqjxvfoc1MsFQxDTHkZaLYsm/reT/5ISewxgnEmeD9
g3m2U5mJtsE/98vI+KJx6q+3TFEmsM0/HbSKZCJ79Nwfj4bHOEXpZKwVYcLW
tMQMvyYmzlYGRE/peaOtbtWppauYMPUnR0ZumomRRQpdscNeSBlXaXRZQfpj
Y7XijHgGThXGFVbc8ESGm3LDLWEmnBU5Njx+NIPUw6q4N/kQ6S9dBL8sJ/W3
NSv+tMlA/mUndVdcd0dGVafJFMEnb9pGWodn4IDYUb8cDp3M+Zr79whP6Cme
HO3KDKTc2dm/LN2V8L/nDSJ52ZTUC0HvMtBWr1s16eE9Mt90wuVJnVIFsrly
lEycUljD8NV3RHbpxnYTci6BhQCmNDUTqXu/d6wYtUMdqy90m/Uk7+DbiZXn
M4m/PsPSLbNE2wb3K9kSpA/PTf13ORL8UN/8tWDi90semUUQvXeh7brUgRCC
j/rm/byphYGPTh91k2VCIJfpecV6gtuqtgnw/dlPk9pf4aZM7jFufvPSAYIL
yI/sUdUGhuSAyx5ggsyNTRtrxzORrdy52+ayOQjP5XY165C+LVotWrMkC+n6
Lzqqeq1Ap6AuKZ28q6n1HKs/IlloK9zIL5x+CwIVjPQOmRG8zs5/ETULhY8N
nk41vws6U47OsbaE58/h0f7tJD6yumNmuzPoDGdHFLmQcz1tW2z7Xxb53kpu
6o3fB7Z781q/x0zIfnH1c4tsFrL+Y/3w66MDI8PbfHsEE+y7dbPfyRF+/h30
zlJ3ol9Zwx6pTBB27zfIIfGai3THQiI9QHbs7de0IvL+w95uliP8tId72nwc
vYDWfq/Vv4Hcu8TDfHNSz4BUZt95fW+gx8ymqpPv9Pn80/bjElnYnRq/SUH4
CXR7r1OemWWCpl5e3wr+LDTw7V7i98kPKHtstlEEMmCrr+Oir7OZaBy6650F
OwBsJ9+590mQOfbp7Emb0Uzs7tebTy8IIjqR3/nTMTKveC7bnqrORG+jI1UG
UcR3RNcNbDfOgNjkryuyUjKx5cb+31TXEOBg5OY9ZL5Ncmt6JT7OxIZZ7lmd
A2HAMV1thOmEv8n4iYFWJkpJ5BWXZ0SC7KM1RxKJTl5dsinqWVEGGr9vlMxx
iQLhf7fQfHcmfChMqB3xJt+FUCjNQSuazEdDz3ktomPn30n6G2Wgwc5209mh
GKAJu61M9SF7zarfjPGTiZbHwkvKOPEgvPnNspblZM9eXsX8tIKJfda7dQT5
k8CWf61IBy0bzlJb7cX6U/FnmNcPRZ0kCNR9qeBwIxto0seCrnimYvCKv3db
w4gv7br9ZyQ0Gyw4Nw1uyaXi0mTpS0vWJgNV1qKYdzIbuq+8c5p2T8HAHSoG
BfPJ0K39Y/ni5BxgX91IPSqQjCWp/e+XyaWA7FzmvcfPcmCDWcg924wk5Kes
RLox8XtTkofLuXPBcRz1ozWScMMjJ6H4EhKvsVV+pVku/BDp+rbmTiJKX5fw
n9xP/NuyX1MqcnnQ/ZOxqdotAccXM7eV6qcC9epRzn+meWSuVttiVjxqN53Z
/9wqFXRahFbHhuSBygqXox+ex+Guuuf5f4NSYeofY33vrzyiS3s+fRWPxedF
NxZxMVJB7PnH9GMiLDD+8njFIloMTm6Q6jiVlQr0C8Whb3exgHKAahVxKRod
x64pjBamgnCixNskTRawrbQm652j8IN5iXlTOfGT/YwlEaYsiORyfJgcGonO
T7jCJqtSgal0IKnUhQU0nns7dbIjUEta6JFhdSq0GMSv5I5gwVRg3bKR2nB0
7u3+LViZCgz+hKjb+SyyB+OU3F6EoX3LG1xaQvKmH7i1pIMFsi/kJ/aOhmLd
scYsndxUYIV69LM/knq+ZFio/ApBc8eQVk5yKnQ31P0O58qHWeUuk2DeEFQb
aNw25pUKgYJVViHK+WCsftf5HdGjNJaf6FV7wjPowCw8kw/sri0GK6QCcWk+
j5nC5VSQXVXt8tEqHzhWJRcPm/qj3tJ4xZcypM5/lhscUvIhMKx5ppfug+Zv
klSymSngvcXh6+iKAtA57pzVm+uOGqNtC/GSyVDWtfIKz0QB0Pd7J9FcDVCr
qDD+ykQSjH3hOJTwFgLlYdTE1W0H8cPudtvOHPIOd2me16ASXLq6uX2VKsge
nF2ZvZO85/Y7NUNnC4HesiNKTN8UZp+oZpkIJELgKbemispCoLUqJLQtdoQn
Fjd2DHbHgmPmrTGmSxGwjjL/ix55DKsPOfSvXxNL/JuZ+smQIqBpTr2ZfOgL
mgMZqbH6MTDlXjsQlEHwWd4ar3V+sGja0TL3aRSI3bgq9eV5ETA4vmfTRAPB
+7cb7WtYODBVCgNDJYtBbHAmRf5XMIz9ktf9sioALCpXuj8rKAaLIlnGKXYE
zLbPNzOF/IBt8gKV6ouBHt61mHo8EjhPh6eleHzB+N6459SzYnA8fza9oCMS
aBHPd+x65QXde1N3GkwVQ+T2W42PKqOg+80rf8FqD6AK31hDmS+GFsodN/ft
0eA91i98LdodDDhDdt+WloBmV2tujm80MF6/mnP1cYGW40WtqZtLgM5npyCy
LwZYNfEJeyQdwfF+R/2V/0qA/5dejYh3DMiqyc/rlN0me5fxw1i5BNh3w106
2mOAqiszcdHdDJhcszThYyUwQDEvnFGNJXzcGvXvDaBFJd2kRqcEAv+TR9Wr
pL/P32sceqAGtlImXsn6JTDLPMn73JPgXwNLdrgfRSkD+5/VF0tATGGujxVP
cJ+/HW/gErImukHgSgnohOj9x86NBcZDSqGalQXSH32ffnKNxPv+kv1eTPB9
e/f0DttiJOt62v6bJUAV2iapXBQL7DmZRrkI4n/lGTJUa1K/xJNK94xY0FnR
4qmt44yyX8IzZG1JncpFqR1hscDaNF9UI+SGdPlaDRu7ErKXqM8FnGJBqmSC
vezTA5zyObv9NcFVdlO19+qS88qr3J/R8sCxm1ZVtwlOE6vw1N1K6g/frzdc
4IUW1MP1KoTf4Ph12rnJGNB5oTsas+7x/30GRZrUI/auxYeWFQOBfjP1Iw99
0dHWXO0oqT/y115PEZMYaPHgeyn+XyBS34as4yN9cMzt+e6fHw2B1kbt164E
YcvPgsdM0reB6u/Vh8ieKHJkBM1HBSNrgbbLkfSZU7NgNf82ChQf6QSFLA7D
SKuhNUmaJSCME45lHyNB495K0N4fjiw5cdt5KAHGQnnmwMVIkBG6ot5jH4FS
u5zafZUI/zn/53s7IkBx0772JE4UThkMr4VNJTA1qyclHhAOlruX9V7Li0cp
m0Ih1c/FwHHLvbGCFQIbDlPdz/GkoJhs1Z0HJuSd2/C0Df3whvgfV2TehaSg
cJkw14RWMdAWlzGGP3qB89rWqzxbUjFwDf1YrnIxsJJuCOe1e8DZ7zZ6DfvS
cMCJ6XV6WTEIn1mvutWGDgN3VN/dPc/E7n2y0y5ZRcDW2zG9OMkSGCpPq813
Z2O32O9ho95C4NxLnr3o5Ix6g0ZrmsOzkaW2rkm/rBCMA/mLL7m6oWl+2oLf
32xkzmn38cQVAqvhxSuto+6o8kSR/asqB203F3U5m5E5c1b4Pcf8Ec7DwPIX
G/KQ3ftq1aXpApAd5fy9PxmIiqKeexdZ5aGmfvUp7b4C4A/JL/qzPxgXPb4n
PVGeh7SgQ5XC5QVgG3KptzU4BCUsyiUat7JQRbepfqNrAbSkqpSlqIejmG/X
4XfxLJQt+b2/l68AAhfCIo7HxKDBGHtjdhkLKSn34p6O5cPYpiMJ56Zj0Uf0
koF7Nws5X7Mn2G350NLOW3nsRDwW7D2qQf1D4oU48iH+ZD4z85Ko9xnoz2D0
PF+Wj6zueDMX23zINhcrd5RKxEntHVtvrs9HnYdfVt0k83/s63I7u95ENHKp
cBVTzMdAn/E+izX5UHZQ0/3H9mR0bbD+tVE9HynvGrLdZlkw+X7fT/2eZIyr
U8obOpSPLQoXErJesaDhoXqooHMKenYO3D2vSfIOfjGZqmKBvU9iP/fmVBQq
NrZ8eDwfZZdIBZ1OYAG/98+Mba2p6Fy/Nu80wXXszrQ+e8CCMYfon1ds0vDt
iX5mzdF8jFT+HOhwlQUypftWZa9OR/WooOv1B/ORrnYbDh1lgS0l8r/PZel4
0u++qOFeUv85TUlVaRYMiMf6rbnARDtYOu4ol49iKc+DLgiSOmn6waLzTBxO
vN2xYVs+0p7x7jUZIvrhm64NJz4D5VVNxF4tIjydXZKfbfJgTtz3xJM3mWjH
fzVobIqFrAKpxjfKRFe4dHKfdsrCstPMleavWEjrWWjXoORBlZrki8TV2cQP
FvPHpZJ7sb+hFRKcCy7WRq/zjuRgbufZr9qPWNh9vGT04YVckHqzc/702xxs
6YQ9JuYsFF5Z/I+yPReMG8tsjt/Kxdwu512xG1ho/NF2sKA6B6Y2elcsi8jD
D2mccc9nuWh8cPjYte/ZUJDvePLQCAtNKe/rgm/moo6vE59sbTZoXnhVdmRH
PrpclzxxZiEHWWJ8gimB2UDNU2UctcxHbZtXX2bW5CBdNud5lFw2SHaXjP33
NR9fnWF/tFmchcaP1m1Z5JJF9OAO7iVjBWjcOq78ZyYVhY8oqoYqZoLG0i+G
aklFqPTV59iLA6k49Xj74v7lmWCyq5pvSS/Bdc6OnHqcgtTx1qpXExmQZHVP
PoG7GFN2Dck7LUtG9s4H26XSMiBS9M3P1ZeKseXypxLzmgSkavKofd2SAT/s
WlZ28pZg0dzrXgWReGRs7FyszZsBHqP2yq4yJWh8NCrt2dVYpO0R0b49yiT6
eTz77WmC1/Zp3/4aibS7Kc2rcpnwvm3phZjIEmQUZR7ULyc6SJW/HjWY8Lst
YLZKpBT5uW4d0qsMQFagaaiZDBNSfmxi+MqVoqZwrmn7b+KL2/+871/NhL1n
xY9MnSjFwNmWN/ZGHkhXX79Ociwd1rSrKNi4lCJlFSNS46sp2nJ10H0j02Hc
6G3URDvB+7I6dZxVkH7j7/pSr3R4bF56deUbgot8FTVuNwRG1rHVFXfSofxx
Q03xOMFtT4zxut8F247dm7T10iHDeDb2Kk8ZUgvsJJaHugL7p5LO8NF0uPfk
sv51wTKUPcWKSzr3EFgfpg4bqKVDHGf47xuRMgzMifs0YucLsi5KhROb0mF/
qFgD9+YytBA4Fin/IABYbceNloumQ9aJVMzZVobP3SqHd7UEgfG7cdeNgulw
vihjT/l2Ev948PyFpyHAuuupuHZROqx/mGe2SaoMQwvtddpehMHU54OBvHNp
EHOL6f9ektR5RtZu0+sIoHP5c0Z+pMGDNOdXs1vKUEDqz8TSwSigFI6WVX9J
A2uv5wbGEmXocsiRIkv8jjB8YQV+SoPLGSgqsrYMdWyieNSG4qD7r4eV6Uga
MG4cpa5aQXhsbl3ofZcAtm0L75Xep8HU18QLeovLkG88zbt3kgEcuZnNKzlp
8OTc8axXf0tR2On9atZYItgaeMHsuzQ4IeQ5HvOlFNktUSov3ieB8LfFtp8J
bq/W/ylssBSp923r1r5OBopdkNTPwTQQXkQzbugqRamhy4lne1JAR6Hg/RqS
96G8I/eWqlKssjw/cKGR+I6/wxvPkjoXFXW556SX4oZnGx2XlqaBzvoMnwJy
rmVbXrpdDipFZtWmU0pp6WBrHzql9DUNVLVXBCg6laLWyYTd5cFM0PE9J/px
Jg32ZH88LHWZ8JimVUlfyQR2/GmJAb50cNO49c5wWymujFtSXPY2BzjfO6fC
lNNh5WETM4voEtwsc9o5qDAXOPG+t/4cSYeD2vKZxbdKsKb7Z3GiJ5lf5zed
ztdPB6VQ2od/miWY0Le45oc/8RUOux7tuJ8Oa4O/v7T6WoxaouDyTrAAWJQh
1ZYBcu8pERVntxTjG81xursN2XPyuw6FzKTDXe4Era0fi1BvrvOCSRfZl/ND
haLke2n8zDGyTCtCXg+PA4EPC4FRe8zQWI8JTasvFOlKFCH+OZK3tq0IdDzm
k69PMcGZz8hE4HsBMuKFbs+uKgYqabrT+gzIvCkJMowC3B0s3JxiVAzGzHa6
iWYGrPlWoJx+ogCr79X37X1XDAx3vlVs4sf7/Jq6UqPJ3KvOum1dTXTS9nbr
dpdMeDczYZAhxsLnG1ferZwkuPW/u/klmcCaizvLdYXs+6AVyeFipUBRPtNm
/T0T+Du57xsH5OJJI/0XI2alELh8UOWKTRZUOYx0HBrIxu0mMrK6j0qBvXRG
LZiVBXMHFKte/MjCLv69qw6klgIjjhPlPZ0FtjuVDigIZKGu9E16VF8pCMt6
fS1wJb5b53nE/Z0Z+FHozg2ecYKnqNQONGVDS+KrPA8FJlbHZlRM/i4FTpuP
S4ZwDtHPuXpPlNLx8PASeX2+MmCsUHq9/kIOBAZNPkhTTMNNO5o5GsvLgH35
KU0yIwcY5pWjI/+loqNTjFL56jLg9Dg+qf6VA6sl5suNN6fgiMz6JWVryiCw
fUC672guMNqdVHatTEZpnvuNh0XKgBoa//ZKVC5kLx5WvvYvEdclvxGzECZ5
Lzr8NpjMha3++/mkPjDQ6dHx91v5y0Cn6kpUOi0PBgpbuNf7JeD6jaKj7nOl
YKzW2kkLJ7jKqtPWx+JQpJcr9sDrUuhOunDu8WYWCGvWB9VmRKKZ7cCmwsZS
YAUstK8+xYKW3K4hXe1w5DFrmhrNLoWx0OURW4i/Hgg+Nho2EYKXXf9V1NuV
QmTeFdfUfqIHvho/n97sj5sbjKvop0qBfkYnfRFfPrCENi5K3vMY5c57uchI
l0KZwtUIVMwHxvnB3fR9Hhg9Hyfj3kd8yLi3wcaQ//vfZyPjuvYovrk6L1KA
+I1VtuF7zxQAh/M3carFHq749DTt7S2GQHqCr7p7AbCPLI64J+cGPiWPhfdG
FMPUbQGf/QUk/viz3sYeDxhbOfvRR7QYBrhW+C9bWQg6wgkKq7UDYG51tZj4
30JgFqty2zwthO6gI3OwIxqkYl+4+p7Ph6nxkuTdSsVA+bY4U9gsHaqUjj0/
w5sP3S9DqDcuFkP2dK5vTgCZF9v0ZeJyiH5qWbVu5mEx/Jj8QXctzYC31IWp
tmnS9+CekRddBC8ONev4lwVpEUNcBYtygHpil0G1UQkcPDrZdmw3C151PDqX
cDAb6PwqgnfulUBTZRK3ZAkLqvKDju5wzYKpu9vmFWJKQEi4rTFPLR+ij/ge
1/6SAVMrCtal9ZfArhs0QaN9BYDpjyZPFqWB1D3baKdDpbB5Zk7mn3gRmH46
eyuckwr0uIe+3udLgfvTklrlwCKQTTvDer00FYz5P85dvlUK74zq32rMF4HI
h8Wm9wyTwVjFZLtWbCnwRa+vt+0uBteY0qnh+0mgeZzGp5tXCmsebDl9UZH4
3Q+l/VcYicASiJzjqy2FW9/1x8pCS8Cl7cY6R0yA7pwfJy9wSiGpfqvzpePk
XXKmXyn9jgNKlIHEt8+l8Iy+zt05oRQmq1c7wW7i85zYq9b9KYVw1Xz5zKlS
iFX/92dvYCR4X7RtFhYqA8kD3HJfvMi7vxb6Ta4yHBi+vPt7yXeT+4Hx8GV7
GUxeOl9+930oDLhRlFZtKIP3+8L1vATKQeo/L5MlfCHg/ZVXs51aBmnPnfYO
aZaDxZox2ui2IKAjHPu5heCCYYP99HKwFZ56IubhD8z+5NMB28og+HS2umFR
OUypORWMFfkAXTPaJYjg5ltsrpwdJvEjBZuV3nnBmNDgj1+Ex7ltX3aZYAVQ
92yvnllwB6lN0ao1JG+w0OYdDgoV0N3Id0xF0RVsfW+ODK4n9Xcccn1wtgIC
H80w9hreBe/Pm2MNyLnSYjrorbYVQKnxrKh8awmzpTantgqWwaWTs8kHvSuA
FqA4KfHcEKirJ0SBh5xXumDHUDSJX1W+q/OwKnZ71a9N/UX63xcUFMWsAOMp
kdutRleQIXCu/QyZfwcj1i0zzSc8O+bWbu6zQzHFx00aZE5sTnl+X66Y8Lz8
KZYq5IyB3XUdDm2lUBKdHrNQSOo8mLnDZecDlIKwb2Ol5F29LC9szKkA4Yi3
t4P1PVHsmPKFsORSmGel3b2fVAH0FeOq4b6Pka3O8XP2KwXzrGvHNgeT+JLL
XF7Nfij1hE8t/E4p/PRYcGW5VMBzm/efc3mDsHv+5NGP5N0GH0k02GZaAfsG
TNR8doagrEwh33VaKcS7r/ztdrACxA4zzH+6RyDj+PdyyqJSkD4s9/zjdDkI
BBuJlu5mYGSw964rd0rA3UxvvGttObRSk5+KXcpAxnW/0dtcxaC25F2NklMJ
8GRtmHJKzkTOjeLy801F8FHPpItncQmcW2bdt3M8Cy2+pi3f/7gI2lYbpUYF
FENfkv++L865KPXXVVlwSRHMRypLRAYVwcoyzYDsZ/lYpu1xquRbAYi3tgX6
XSiAg6yu1OOzJSh7OXH6oS3xd45D89GmmeCsvUdpb3QpTvX7fGKsZUGsgO17
uz9MMPonQNm4l+hKVyed9+554MKTZLLYLx0UYuklVKdypKc2Fb5Zlwtsec40
V0oKwOWz3H+HKpFTuumml1wWaC6sWJSgGQeb8nQ0f2xiY/fT16/y1qYC27PA
97P0LbBnJhYeMmEjh/nykZBuCplDCYvafulBwKk68bZ4NjImeleLPSG6zK9Q
UzTFCD+eu3tTanUtsmTE35X/SwRGeNDRb0ZuGP/x9e0PI7VofChT6UtjHNAE
YyaseULxpKiGaerqOqTmaGx6qxYL1JLd945yR+Bkej/jF60OaVdbmhTzo8FW
4UqP6t8o3OMiypgPIvFmnR58yRHA31s/lvMyAYef1W00XVWPlIIoQZFEopcT
D/UvxKfi98rRG44y9ciuahdU3R4IsXJ/4QxXOp4et37ldrAe6WkNNuXGflD1
maZ26DITswO0Jq6eI/GnxNRPO/lA7IFtb/LLMnCLu77WajPCX7HKzCPyEQi8
v5BGF8xCnRDLemc7guc1zUfXeMCHqCP+IRezcdd52gVPZ8L/OdPtxcQDGKt6
ZviMmYN2hyPUNtFJvNy/j8M0V+Bfcunntq+5KFC8vnevO4m3CnfRLncEed7U
4+pEF2U6BbfWkXj6zNMFnQO3wfGaFd/lEhYKvW0VSLlHeD4Nm/gX3ATKq8e7
p07n493UL586bxGcw+Ti5jGBKt4H3z6N5+NB+ZHRXeYE95b5Bc+OAWOdpPCR
BwVI8eyRLCHnpYw5LgTXAWbbzDEWVheil7Lk3JkDBNe8vu2W1wWUf2+7YWVa
Id5+83OjvwCpR1Q85LuKHUbzhTYqsouw777E9rzJOqRvO8kpWnUXJ+SfJTcd
Kcbsk/IC3S11hGc8lPXWGcNDim+w24rRQ9voxKA9wWOsvdMk3NFMjEt1rK0E
65IjUhbH1CJt470d1ht9ceu9khNLs8uQ/3sH46dhLVL28c7ZafphtZvqxYGN
5Xjj3GhxNHlvdL3qNsebATjseiJmhV85pvmzK364kHcr1lTO1xmEN7NVrDqu
VGBedfurZoUaZPPGmRV0haGgQv9AxPdKLI94suGZZTXSNv2jQVM4MgrWxX0/
VYWmUzk5ZnFVSN+cHmlTEYFOzTwBzZlV2GyrX+U+UoEcFYlzm6Ki0KFKYeij
QTV2RHUwZleXIi3kBn+BfBwukhaELRE1qJinICWqlI3CeWa5rT8TcX+V/v2l
2mx0oTpf5rAzUNY4q6LyYhKuCys1q7BgY+h2zfMhB9JRZ+z5BnZ9ElraD2Rt
d2ejQIX4oM/2JKT+giXr/JIxxG5fjGI++Q5Fo9q6bvgjxVT+nKdIKkrHaut+
WGAjhSG6SjntIdI+aA0/vJOK8n9t2VrCtcjonSxzT7ZDY+sB/fTnqbh5W7K1
iQTpe/DG89ennYCDv1acCExD8Z4Tzu6qtdi96u156fFHQHN7c79mMg1vfVFn
PNKoRR3LvVdLrcn3tqN/sbpmOhadOxQgrV2Lmkkz9tWXY0En6fwH2bl0/LNv
+x6Vi7XIBBPd358YMPVO7++Ts0yU33HqbJRpLc4p8pyPTkyGwFyZstosJqYJ
DXJ5mteisB72/TuXBraHjT/XcGXgH/v55BkLMkfaNb5d5csA4RnJ5Ft6Gbjt
dfLOkeu1OGYjtGl1QRYI6/K9bM3IwNngiQMnCd5SzebXM8gFWvX887y/GXhW
qk5w+7VaVKzovLeP6NfuwLIJIa1MVLv19vrNK7W4r8NkzaeWfGA7y3U/jc7E
rni7xJWXajFJYP+NtysKIbDHx/DVaCYmDu3MXa1fi03acXWtekXAmmW8Wq2Q
hZrD2z5bkD48/fE5Rb+3BFiPDj3OrSe4X53VsHItNgyFP762lOiUJcNaL/iz
8dPDGv6fO2qR7dO0UWtfOXQfWmdQeSIb8amyq8I6wvOftWpAQCWwW3ZqHG/L
RrUj1HquGTb+CUu4ui+uCqiLZrzbuXLweVxexhyHjYM7b3VFpFaDsO8FwXGl
HPz9ek5AqZ2NF547hDFTEbqdlqwIisrBNfxGi1Wi2RjusfispzYbaBIL54aa
cvCW+R+lT65sHPfxFFdrJnjv9vuXvuXg2MZ3gplkHzhIXl24mlcLrEWb7t9Q
z8XNrQdKJcn+uFjhcKxMvA44lIWx6ku5ODe45Y7/X0TPaKXoVp866J7c5tbs
kovKVyViH7AQy6uyDjyergPKtsxxi4hcDNl8wXCJCeLl0Hd2Ywb1QHtqHP8w
Nxetl+hN8Aki2l8ofDlQUQ+cPXtnZmtz8afv4yGjohr83qnUorW2AaYSgvZl
9uSiZKPV+Ae9GmSFz+5Vtm8A2tLSBse3uai0KYf98Ec1MqmhPr7tDWA8qzJx
eCQXud8PMkX8qtHlaW2fukQjsCs+aE2P5eKbFV3DDtRqfBeZ7XbQphEY208m
mxJ8exfnxqPcKvy+cD7Rv7IRZGdVdtwdzsUHBd7OVOUqzJzpzhFd1ATC5plm
wq9y0V6jd7FERSWO2n5K7NVsAo7GufurO3LxX1xP2SXlSpR4pri4/HETsLaN
njEvz8WeO1v4KnMrcE1t/9U3C01A/UjX9PLMxQafcR9l33L0sPJ6u2RPM0wF
a7pRr+bisfsSmsunylD22JfXYN4MnEUq6xPJvTwX/6V2W7sMpc2dbmZWNQPr
zaarfzk56PBt/9pzv0qw4G/m4d4hwrO+OjI7MweDtV9EBB4owcamAP7P3C0g
fPDl2HfrHJSm7r/d61GMczKVvcMqLUCnr/rNM5qNrA9Jx//OFCLPAxmxypME
L3KcLonORuehUI2sLYVYwP/0u8MlwsOvsKVbMxsVd5ld/n2sAG31z71ce5PE
b+18cPxbFnrXbojrscjHDAeJy4m3W4B2MeXM1tAs/FnBvrSFzkIDL4l1wo6E
J83v2SW5LBRov3esTiIPt4pT/1kQfOrBe/WFlkwsyv4RwyObgzV9Adws+xZg
TX/rFTyfifav7P9bkCV5zp7CccsWMH49di9iNAMN0saVizZnoPKjF30SJoSf
uUc62zoDWy5K79zBm447v/aX659uAUpv6l/jKSbKtmxfsB1IQZbVWp7ZbS3A
2bLm4YoP6Wg/Jn3h+2kGbrg17m6d2AzU+yUShoGpyJiK1fc08sGStJ9ymx3I
vWwetBSbSkEdmuUInwgdO0LZn88cawadR6F3y06kIB3yHAatzHHd5XauR8NN
IPvAUvjJryQ0vmztVdPvBn96jqgu+07ep2CAwZgUAxn2FcUBHvEwr6G240UQ
+S4Svi+7YhWK79nJy87GFsKKPeemTu4h39GL1142ncG4a2B3zN7DxZAW8N73
Q18dsBMEPY12B2GT+i91xy8lIL7Fw2qVCMHrTfsVZn2xpPfDsgdQAZ1hD3Wf
P2AD/aSOOWefG/KuLDl434wNMrzzlsX2xAcU3E9JMbKAPUIjcr88moC2YdHT
SEY5UM5NNFa8s4WYBmULjmozSE9UrrrVUQYUmw+5GsZ3YK9mrVPpeDM4m/ee
N9haChQZ5Yt5nffhGiwZuA6tIJn/ckKirxDoNHeZTWu8YIefAv+XvHZ4Msmb
yc1TCOzLa6S2xz4CBY1H+w5BB7Arb/lwyxL/X3oDtvM+BpEm7xP/tXaA2V3T
x6I+LKBYq5dyufoCOvPvkO3oBOQWGuCyzgO6sG9p/5MnEOHuFsRzuAucRSiR
Js05QDlT0hDr4ge/HTbHc0q7oOfj3q56h0ygzE5fnpzzh2FLcyNF36dw2Pj0
NYUuJlDyO55aPwmAvB9p529MPAUeefrvJVvSgWK46HDXnwBY89dIPXRzN+xq
uXnwyx2isyOWxeOWQJhcf9txu1Y3lBv4bKH///8b17wNn1UJBOn49fyXb3XD
LFvb8/zqJKDEZEi07CM47Fi7M6wb3jAP/BW5zAD2tZdyQ7sC4Yyo9et7Rd1g
8Ur8/UOt//+fJV7eGaFAkPL56XaguxvORr659/JZFLCnxw5fKQ+AqsJasBzr
hsDpw3kHdcKB8v1Hm9fuAGi7jRcm57pByPbgya76YKA7FqSlu/lDypYF5QLB
HnB8MW0ibOgPtFpniTUZfuAtvfRU7roe8Larsfq2kugEq1PO4llP4Kzikus9
W3qAGvZsPs7cjfTzpOkyT18QexjoK7CjB3QeUGi3bW2BPjMuIqnkA+NxCodO
S/cAZa/Q7tpZBaAkjG8pq/aGlJqz/kHbCS7cebbgsiWy9x3dKrj+EVwIS6Cx
qT0QGDt/7trQfaRrV/TcPukJszXao90iPSDV6GOoM+mF9IwRyQNnH0Kb4i1a
GV8PSD55HnAqI+T/v+sQJlJ+HyzEv80Mv+4GrZefRQPoSUg5axFhr3kJ3jV1
0OfOdIP/kBhjT1MK0dVbRSt/ycHBUS1ffslu+P7oRG3/mnSkDISe8WnQw/4r
eWoJn55CjmFE1s6XWUgJE/6zydIeVXeeDL2y7Cms3PFN8fLXAqSXrDUQ3OCL
x4xe+Xyd7ADpHRbfzCWLCP+xyB/2AfjC9rOHw4UOGLQ3ibU3KUba3DbF9N9B
6Ht406PkxnbgwOZ7Se9Lke1Pv7g8NxzPub4Ieu3ZBo0uPMqR/NXI2Ba7+rQ1
A/vjjoZHNTZDSNqlQ5SGeuJb1frCmrLwrQEtVdC/Fhpcgx1arjcg27GkkH4o
B03SdraqVrOhv0fqEQg1orFJpIt/XS5+sTQU+dqHsO57wKt9Z5qQ4Z3x1OY9
C80P6Ogo+VXBN5xWbMMWjJT63NI4Uoh6BRHi/7jIPNke417M1YmshzrLflaV
o6bviXaFVckQX0aL4HPsRP7QnTfqbCrwakRCnOEWBhQePGfU96kTu9MWpo9S
K1HsvUDyE7doeG8/H3sFu9AxJFR4pXMVMm5mjOx38QetHS4th0S7UTi7R+e0
ECJ1eJpvD68j9r23S/DZ342ykcUirkRGyTaa654T9UJKrTa3wJVu9F7n+vHT
FjYGHpraVzMdgI+OixbeT+7GotU/tKYq2KizUoSv/EEUmlZa1hyh9GCKiLpA
VH8teshIjvEkpiLfT8ubT5b3YJUOZ+e29XXowkPhKytJR9PpxFn6+h40jmw4
cvBiHXocUvX6W5OBIfVi/sJbe/CHKh/fdFwdTg6/nfpTnoXNh9fekdzRg2XB
g1Vqb+twg8cX6mh6Do7DYcMc6R5smPous3F9PY49l4qY9s7Dj4ufygZI9aDB
lPyTeP16nNf4LZOVy0K1+KDdxZt7UCXK1Ls+uB5X/z0xnhycj5VmXMv41/bg
Boe6dUEd9fiqW2SQbluAH94LF9os60GxjtFiAd4GHHBeeHpZsxCPrmtq6/3d
jVPRGvN79zXgG8OTnZfWFaEefLr6X1s30ob8V3elNSCfvuI55ZxiHFu5J3gq
qxuzz6ypUn/VgL0Xjc9pW5fgh1GPghOPu5ESYNrgLNCIluJHpCjSpbg1YbDe
XKkb2ebl552sGtFCoH1xblAZMgOm1/3k60bH+5rZxjGNKKHYlBugVo7ZHwe/
vU59imLCSw3UWxrxXs+RkKJ35Rh/OnY2sLwLx7ykVv4Qb0LZWPEWhbWVqN2y
xv61ZQdKpU57SNc24fFiaYenhtXYY87wXGC349aK60/9R5swT4LrcvhgNZbo
iXPkl7WjBt9i+W2Czaj7pI7b1KQGa1yjRocftGK3gmsxn14zfs2zP3HWELEk
fNXVg38bMeW95Ovrg80o1G5wRM2fjW+akxe5cpPzZHVslKG04J7wh94b6thY
3aQ6sYirASn776kbUFuwqXR0bu8PNnJluSldHCE+49rvMZ7LLWgtyi95ULcW
15R+0P1GdJ+Uv/C2rX0t2LpkV0/uXC2WvZLS6f0WjUULDkJmOa14SXXk+tJ/
dahy7hDNpigQI2O0llKbWjGK7xG3okg9Mob2z/UNO6FOz90D+u9aMcSxij94
Zz3qDI4v7Wv1BY/3z+9JC7ahEltu96sz9Si24mSD6HwETHZ0uldvacPUC57c
lVfqceu1FMd7XIkQGbyrt0K1DaWSBCKrb9WjRgH79rvBTGiwjrr57kobqrw5
/mKFbz22dFT5SJTlgYaX68KsQxvqXlt7UT+0HvdvqtG3hAIQk3xAN/dtw0US
8RppMfV469guHVpUEViaOjlR49vwQtz48V+MejRqb3n9aqwENGp2yFFZbfik
Jv7OwZR6bAh2WB31XznYP2Dgpdo2nAr8IueWWo9n1R56fzKvhECHHK4XPW14
ycJ8bQqJ/2kRcftYaDW4CKgk3Btqw5QV56fSEuvReZWzgUYxwmztyyUnptpQ
5qdIuEtsPW78nHas4gMbyliOt/bOt6GW/UCrWFg9nl5FfwZjtaC1iPFcg7yX
EwVGhtbkvNtK7vkLjBD/sv3i60ui7fjvsX2ytVs9li/zjpx/RXRXUsIsfXM7
+lrk8iy1q0c1g8itf1oboEx2v3qSTDt+2HRry27jelxZL/HxY34jbF155G75
nna8deOle7tWPU5ZH/ioadkMP2rMxpM02lFgRetuUfF6XNTy14Sxn+hYUxrb
+Hg7GmQ1rYjirsdr8ZGCOUtaQfija+qEdjuezFnNo/yhDp/dadEz72wFA+4q
DZUz7SjbX9z4oo7MoSYZ38bHbeAY9rlM7Ww7CrtfndGPr0MjlV6Fxv3toBgy
kf6R4No9tNvxd+uwmydxuclkO4z1GQjsJnie4qvURyfq8N2lO7ZhwR2gEWth
zUf4baXTdKY21GHV/sHdl+U6iU987X+J1JNUbWxeMF6L6/IuCsOLTthwcll6
imY7Pg77+JqTV4v/3kraX7D9X0VXHg2F+oYle2TrIkthLpfIUvYrn5Ak4ZYl
a5aSSjVyaSSabKnEJFKiJlTWmTH2JS+mwQxmscxIk2vLpa64dfOTuvnN/ff5
4/ve55zvPMs57zkfC7mJqBNE9w8AXrs2IhTbDfQdAvK+bDbCvW9WqjcaAENf
k56wmS44RI71SJLgIONf3itPaA0A6S5j6Oy9LkgXmISfc+Ig7H3DkW65AUgY
nSOxHIR6n7+w9KWGg2oCjh/+fZ4JkwtZrrqSAO8pquRMof/b7/42LsdmQpt2
YX+XTSfgSo60F4pzETbbREOikQnD7yLj+cEvIXWje4uuhxBXtP1Wg2OCQviW
U/JX2iFDmXkwJ5qLspmhcwZ+TBjvtEjfiG2D60MxMuF4YU75GpD52IwJdbam
ElKBrXDfKXXx3j0uctuq/s8XSSZYmO/QLDBvgRRp8oB2KRfln1VSVxMwQPe4
R4vKWhNEVfleFq3hovIZ6+blGgacvRqZJi7U4cj5oYsWdVyEf6L8MfoKA25K
x0tMezVAR3rpu3oh3h/2iX7JhQHassl3raeo0HAs5+C1Wi6yGazw/CHDAPw2
gWxpSB2kqFvnFZZz0StpwiMRVj+I/aFzoCSXDGnk355u3OciYkF5YeydfjBm
fk37Yl8DWObFoonzXEQJTjUs3NQPBvf5/nk6z2Dtwaxr5FEukrp4XuZYUx8Y
iKbGDx1/Ctq7nRSi93DROP6zw53TfSA1e/uW6HAREF1JS/bvOCgswyZQqJKg
bdVtWx+UDq7ByXEXt3MQrhM3SHOngwF1j7T2uSLUVsHabtzGRuWCm5N186/A
0b+8mqNSiryu3U1ssmOjbDNKlg/+FUxFnTrfrPQCSd1knXE2ZCEss0HxZS0N
diS146pfUBAm0Fy9mjGAarruUMS/dgPTvfGLvFM7eufAFnO+0YsIBciz5ZeX
ECnj6mdv14/qSCJtD97QkUjx7PRSQAfo6e9HLckM5LoyfARrRkc486YRK0I7
2DZ6OyS0M1FHBUajV0BDZirXL8bItIHckn1NHmYI6a+Jf5F37UZE9CsmZF8z
XDGOiRAZ4iCxOG3en9MtiJC7+eoBOhV+ZAVUbMKOoqbobUdTOM1o4U0Njh9I
heJYvZ0t/aPIR/ZtR293E+JIRyfZrdbB+kPUpKM1hjrJrnlZ/+3n5YpkFjnU
QaqW3/hSyxg6NVMrhi+rRzZ6gUHVHyjAnOGfdhThIbuRq1H6JVTkfcsqtvEx
BXZVOVTpOfPQYp2loWM+BS2gG9Q5FQpIbcVQ0tt5aOf9/NNbdcnI+3ul0aEW
MlzydJ99v8JD/SuSDe6atYiwpvWHvhcZsocjYjt0+OhI4k+iHfKVqGsLjp1V
SoKpJKwqNp6PMNV3Q3wlXyBtW1uJ4BMkODk+1Wj1gI8mV5Vkor6XIyJhucbI
kATBF3JvmzfxUcI2j4fyH0uRmXzwRQMREqzHxKx4sfloVdVpz4U3RIQficzI
nKsFBcVZDfwsH/1euWGz50YJwlM7+pJ5tYDjRWqTP/HRLu+fH7gdfoimHDMX
3YQ49n2vMeM7H1mVPZncv6kAdf1SjdMTnrNyZRehddM4uhrAGNv3goAcRZdd
jgnvZa7XrZwV4t/tePiWhCzESTElKhsJeWkIbvd946Ou59Z2IsspiMh4Kag4
SYIdo7NnWlf4iKhp6ltscQZ10W/u9a0lATZNp2vXFB85lv3r73/i+H//VioF
ipPhuYXWbgkmXzjflqQgk0Qg7s4gr8aQgWC2DVmT+MhF+abVJ/9MwM6M/4ia
I0PWWB2rKpuP/ASTZtrOBRCWr6YwdJ0CbaOl6io2fKQgCO2YTXgGam8kf+rc
TIXhqmnrvoM8xDN/5hPuVwFrKZ99fuCosHK0kTj0fQwN31Ok6R2sBqGHL6au
UiGvmBj2oXoMKUd6/qkpzJsEoqXmJpkGUPqRI968NorcFlzj3v7cDISO6jaX
nCYof1W7oeY9gs6vYGZz83sgTE2nopTeAecCv6bAMRbK3x2SeK+PDdFSJSbn
nemg36LlmspvRoG+jFyBMwe026VTjjfQQfR8ZfyH5EaU+dfUVnEiB7xJFdMT
ur1g4rPxiGxej2LWI/R1PLiwRtvr5LzWCwI1+3fZmbWotGl64CN2GKZkNonL
pfWDjf2h/OzAIvTcObF7jTQMC/HUhuXJfpiaqdxsLuy3XjuSLkQvDEP+aXKi
ug0DRHoycrCsTDQwX6iz98gIKByIooXNCHWySOnaVqlT0OVu/SJIMAL2E05R
r4S+j2um2/nIFoO3e/B23OcRyP5MWV8IHQDNzCdJYStEYJZ86j0iPgpTFzYf
IJcNQPRl6h2R7jIo8Txq0qk4Cn9dmJvSnx+A7KdVl9twz2EgT9y6Qm0URFzL
e0/oD4K3gdbt/WqVQHKs01jYPgq43gTTsycHocVhXfkwsRoSbfGu/j+NAj66
74ofcRCwWHnDO4rC9/hOM25QZhTGDQnbLCcGQfBtgxlqRQG9jVmexvoIEDEz
ESpKQ2AfWpDlFlAHljQPe9XZERiXN22UcRuCfl39fW9jqaBPtHTIoY9A1t9D
e3WvDoG7nrpcPL4e4taNXno+HQGLNJWxGNIQnNyuWhiV0QB3uw666SWMwFwx
/dj65BB8i0MdEtcbYWX6N+Jb5xHAtihgJuRYYLnjtV9FXBOwxZqSnWWE89Bq
IzR+ZcHlKrG/H4U0w7zBGaY7fhhceALZfwks2Fq+ziOrtYIH5hr3lukwCD6G
zLcKe0BQg17tyfetkGwSSm3mcSE9ekZUcZoFygvLJ/Ib2qCh0IrqLMuFuQfd
n7uN2KCxKpUds7cDpCp6F84UcaD8q9gFCy82TL32f0RY6IAs6to/ctocYZ8N
j7gUy4aY+L7f9AtfwpzS8utcDAvMkvd5JVHZYCQp7vz7dCdQFg+7f/o2CGFt
4ewALhv+WSzgZiUD7NGSPt1DE+aqf6u6di2zITLq1+pZ6S7A/RWkGohhwAR/
BTOtzIEILrmvvLAL2ncanrC3pEGVZiqm0ZUDz088rLiR1w0O2++UfSnqhsw2
c1+noxyQiuPbPWV2Q6f/D67vEoAxyy88KIQDeZmbczVEesAlX12zZFcrVP2c
p7DnEge28CQyzCN7oLjRx1wr+Dms0TtXT93nAPlp4SpBmgY41Z7enEePYf7q
o8BDj4W8j5b2xxjTYDzydUx0FgH6k159pz7jwDMNm6VbwlyKTX/SJknJRA6H
2i4r1XPgRepyeFw6DdaUrjQaKD1EshOWw2KtQl6c9XZTYa6WPZe46ONZhpTq
zOISOjlAr56NU6qjgch8VPHM/ypRumNa1CkaB2ZcPvCUaTRootG/7txPQVcI
n56w+zhwcoPWajRMg/8D317oKA==
      "]]}}, {{}, {}, 
    {RGBColor[1, 0, 0], Thickness[0.005], Opacity[0.3], 
     Line3DBox[CompressedData["
1:eJwU13c81t8XAHCVpJKWJKlUKopSIUkdEZJVUgmVrC9CooSsSki2jCR7j6zH
Hsd8hh2eJZWMppSSjMbv/rz89X49r/u599xzz71nq/l1A6uFPDw8qot4eMg/
+fPdeVTqSP0qvi+3p1MHYZfVxKc/7yjoO+XQ9vuTCIq+2P27g3j7jRgdsTEK
8vTMPPP/LIkREnGWqcQPPLtdpzFCfv+7YNfCL4oYzNo0okXcy3TkDb6hYMPs
TLHXt5NI95NMfJQyCG4XJ8rUuBQ0c6qpT1qpg1eXXdW+SPzY8Q1izWwKyrLW
Uvj36ePX4E+vdxDvOKNapcei4AfRRodLFQZoeWZBdU3yIFTb/Jcf1EfBnrqG
mzMzRpg7XqE5kDQISy2NeGK6iLe6+Xc+NMYBhR97k4jPRfRl3+6koOTU0eQX
oqb4c3P6X3PisV0VhVYdZPy/bjX2R69g0x93o/eJg3DfQmfcuo2CIl+3Vz5q
MsehHr8/w88G4dquW9l/qRTklz7RRn1kgRK9s/uSiDccMu9QIy7gJ3doyzlL
FFRfoWtM/DPcvRXdSsHAiZWr93ywQtamHSc7Ewahpt3e7nILBcffDRk0r7TF
Fs8ircyng6CeFGUZ0ERBRfdx+h+uLaa6FHEuEr/0PPDQ/v+7tru7Sbodpq/3
MBQg7nY7u+x9I9kXXqb4K8dr+O+NQV1d/CB0BqWN5BJPPqV75/5he/yk5rvW
kXis226qB3ExPxl1fV4HFKvWvLCJOM58uXqBuFDUdaXj3Q54K2kisP3JIHx7
9bRGhbhs7tL1xvGOmH6kOtuN+Mp77WwF4vYflsfGW13H15yv5RLEFZiCNYeJ
Wyqo1dwVcUKjxv7S7rhBuEv7ZatFXDyvpfKUtxNqwPMkd+KCWiIfrYi/u7om
VXLUCV8nNHpsIz6jtfBoGHFFOznmxlM38JyEoXpb7CCYVGvatRKP6TtQJFF0
A19vyfvnRNwgyOMWP4nPa/vNEWrCzhg4vDxXmPjb7dIWRsR1nm0YbBl2xiaf
f92XY0ieuHz5tbmZgr3KixdIarngyZViOguIH37TlhVNXLF2Q2pqoQsqHjlf
lRo9CAt2cbU3kP0q+mzS9cbzJrbVKNgMPx6EUYOt9zTJ/p5UDufzE3HFv2P7
tpyLGoR1RtbbVOhkPn96FFoN3ZHXbeFe/vBBaOy7PZHRQ0FBzfWrQ1rd8Uz/
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
i0J9Cok/P2Z9poCOv7du+tfSWIpf/273kXrOAbFtsouPF9LR3ac36WlZKQo7
v3vsk8eBitnfnutL6Xi8/PB+jYRS7OddlSqXyYHuMEZhSjUdU78uGPC2KkUr
scRXTU85MHhx85wMg456hvP7Jt+VYNgmG5+bARzgzG8MVB4l8RkJK2K/LsEt
6spp2v7k99w37TVjdPR7nOebwyrBp8Wld7Y/4MAaSXGO4ns6Fo6avhCklqBN
sYoO8x4H8py7z0p/ouPj5e/vvk4rwWlK4+3j3hyI0p/bOPuVjindErF+JiVY
yLh0XvkWB9rlZQSl58m+x3m2+FUXY765XlK9BQc+l2x6tWQVA42spA9WFhbj
zn+aqwvMOaA+F8E4sZqBivcKtjPTi9F49pJqwlUOFOh+pPusYeAVsc0X2kOL
Mcg2edjzCgfsuxYv/SbEQBiLSM26WoyPPtPFNU04MLnvQkfVBgaW9CcqrVtU
jL4XPEr+GXBgxoajMrWNgZn7p8Y95IpQNbb+wgI1Dlw7L2u4Vo6BLVekLFJ2
FKFR+dcP349zwMy211JanoFDYmLjecJFmNIyYDymwoGST64+agoMfK7dtGng
WyH+8F421HGMA7SmjMFrigzU8/kue/RWIUaG59lkKnGgdbLDI0OZgde7D9Gd
XZ6jbL7SyvsHOHD0pLde/QkGBt56a2mmno8q2pcZr7eR+Bj574g5y0DbtJCc
HSpZSN+pfXV8MQcmsp45Gdgz8L3O6QnFdVmY1VZzVoi44buub/PEzxS1HBT5
lInCNwOGlHk5oF3237J0BwZGqFrrH4nKxIlgg6awhRyIWPt75TdHBh7UXl+0
fiQDtwnnuir/Y0Pt7EjY7RsMfHHT31jXPR1zL6UvLJphg81X/gJ1VwZSRapl
Be6m4PL1X5QnPxM3aJx+783A7GaZgM/rY/DT6+HvF/rYsIBWvjkwmIHjM4Oy
gyXRSLM/YZfaywaPrBs7BolLz7/xDdONxpu33w6Pv2BDarCM/L4QBqa/ig9X
ufcYRakqXXd72DCdvcG5l7jjlWn2qw+RWJpQcSqvkw1miwedV4SRfWF1lEhc
CMOd3PCGORobzjpfFzofQeJ5yMlMfP09FBs44eNRywatEv9L8tEMHKTq/d6v
chfdBlSvNdSwod9+JuwacYq+HPuHjS/q+eot4yN+O1f4ZTJxt+a9qmIuXmhT
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
MapiJ6zEhGNvZFNyqiqgKN6Df2C/LlTKffuhuoEJJb0KNm2XKkHafdxweLUt
NlCXml950Q/eHxn7mm2qQKjFb5feqmt48+WA6YeOfqg3T9GMulUFHb52b+TX
OGAu77YrtvR+GPboml15rwpMj0uUWIc7oaj3p+NnsR+onerpy+OrwKZ45da6
spvY8J/aaEt+P7iyAr2+t1YBXcVFa03LLeQJ5vcUyO6H3fXW1St6qkBRqMPO
u98VY2wwUTutH1TPWs11cqtgdHvye8a8G0au/Ha86Ek/PLfK8zs8XgUKxba1
LlZeaH1zx47V/v0QWe0enSxQDcecnWPpD7xx8FSD3Nq7/TARMulPW1sNrhu3
n32c7YNxKstUBDz74dMJL/FHotWA745efzvni+X8M3PDN/phL68rZ2RnNVj3
R7hsCb+LQaKq9xvs+yH1jXydq3Q1pAYe3lqy8x7eawuofPxfPwirF7JS9pPx
48Vw4sJ91PNb+VL8Evm94Pn9tUrV8N3DrCrj+32UUwlK5FzohzbbEfGcY9XA
I15/tz3UD/c+e1Xtb0C+O7okSUq1Gn4X9j33bn+AoUr6aa2a/dC00NFmSLMa
HIUj8zfY+6Pw/ArV86r98C7Y5ITQqWpwU7yde0wwAL+Zvns9qNwPGgsVe1ja
1bDTkO/WVHEASiZLWlw81A8D5y7279SthsCsJs7xC4HYxbujsn1/P2R6rNuw
SK8aVI97Zsj8DUR+5020g9L9wDc9b2VHfKpg27v6zIf47fD47YidJP7Bgq4m
xDPVpvp/nw7CgfQfRaPi/fDX0na+n4xvq7ahYOJ3EH676Gcks5GMv3NLNlOn
GihfqnKe5j5CU56vhtfW9cMpd9W9pmSePPf/Ll5uHIwG4BecuLIfQnnfwX9a
1TDqLNSmWx+CbttvaIwu6od4i5nOxeT9tFxfIXufSyjyrLeLnv7TB+X+wc9j
VKph8XZa7zepMKTSuiv//OqD74vfDmcqV4OlssT5WL1wrKcbrP70uQ/uPTv2
GQ5WA2908/eyzgj8zlL4cqivDxYef3l2L8mHDtp/W1bIRuKE44MXXzr6IFS/
cyRqDYm/1G9B56hIFCsPzY6l9oGo+6OPDsuqgbPNz+jmpSh8nG5RS63qg4Fb
dm/dZ6pA0GgLUP8+RsuU1XvDkvrA4H0bu62zCgIg/Mhf9zjsD8o88NymD/Z+
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
4EQMOYou7hGcbgKVu5tC7cwJ9F+/Flvd
      "]]}}, {}, {}, {
    {GrayLevel[0], Opacity[0.8], 
     {EdgeForm[None], 
      GeometricTransformation3DBox[
       GraphicsComplex3DBox[{{0, 0, 3}, {0, -1, 0}, {0, 1, 0}, {-1, 0, 0}, {1,
         0, 0}}, 
        Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 5, 1}, {5, 3, 1}, {5, 2, 4, 
          3}}]], {{{-0.00249616063448495, 0.0010203965292491857`, 
        0.019817365440692264`}, {0.0010203965292491857`, 
        0.019953716143220116`, -0.0008988898702806568}, \
{-0.019817365440692264`, 
        0.0008988898702806568, -0.002542444491264835}}, \
{-0.19443003208084977`, -0.26301425469208917`, -0.13154421647020212`}}]}, 
     {EdgeForm[None], 
      GeometricTransformation3DBox[
       GraphicsComplex3DBox[{{0, 0, 3}, {0, -1, 0}, {0, 1, 0}, {-1, 0, 0}, {1,
         0, 0}}, 
        Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 5, 1}, {5, 3, 1}, {5, 2, 4, 
          3}}]], {{{0.015729634939448713`, 
        0.001845819276842025, -0.012213579977586935`}, {
        0.0018458192768420257`, 0.019202164509485344`, 
        0.005279188322829577}, {0.012213579977586935`, -0.005279188322829577, 
        0.014931799448934052`}}, {0.13191602911944367`, -0.10845828505941954`,
         0.3056060803302808}}]}, 
     {EdgeForm[None], 
      GeometricTransformation3DBox[
       GraphicsComplex3DBox[{{0, 0, 3}, {0, -1, 0}, {0, 1, 0}, {-1, 0, 0}, {1,
         0, 0}}, 
        Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 5, 1}, {5, 3, 1}, {5, 2, 4, 
          3}}]], {{{-0.008749662763309405, -0.013988352885407979`, \
-0.011303512068452665`}, {-0.013988352885407979`, 
        0.0131938674182842, -0.005499804187608588}, {0.011303512068452665`, 
        0.005499804187608588, -0.015555795345025207`}}, \
{-0.15635203951826587`, -0.13146238199516308`, 0.24054066857693152`}}]}}, 
    {GrayLevel[0.5], Opacity[0.3], 
     {EdgeForm[None], 
      GeometricTransformation3DBox[
       GraphicsComplex3DBox[{{0, 0, 3}, {0, -1, 0}, {0, 1, 0}, {-1, 0, 0}, {1,
         0, 0}}, 
        Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 5, 1}, {5, 3, 1}, {5, 2, 4, 
          3}}]], {{{-0.001579359279841586, 0.0006306202554783551, 
        0.014903286293920499`}, {0.0006306202554783551, 
        0.014976013433335565`, -0.0005668683603211605}, \
{-0.014903286293920499`, 
        0.0005668683603211605, -0.0016033458465060239`}}, \
{-0.03755085174031429, -0.22086448253530935`, -0.012326657600065759`}}]}, 
     {EdgeForm[None], 
      GeometricTransformation3DBox[
       GraphicsComplex3DBox[{{0, 0, 3}, {0, -1, 0}, {0, 1, 0}, {-1, 0, 0}, {1,
         0, 0}}, 
        Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 5, 1}, {5, 3, 1}, {5, 2, 4, 
          3}}]], {{{-0.006987476648610676, -0.009736018839568211, \
-0.009021369477008101}, {-0.009736018839568211, 
        0.010688906719070168`, -0.003994647707444244}, {0.009021369477008101, 
        0.003994647707444244, -0.011298569929540508`}}, \
{-0.09744350969955244, -0.16000029215684378`, 0.15982326939206287`}}]}, 
     {EdgeForm[None], 
      GeometricTransformation3DBox[
       GraphicsComplex3DBox[{{0, 0, 3}, {0, -1, 0}, {0, 1, 0}, {-1, 0, 0}, {1,
         0, 0}}, 
        Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 5, 1}, {5, 3, 1}, {5, 2, 4, 
          3}}]], {{{0.012396480980974983`, 
        0.0012961243373509365`, -0.00834549704873545}, {
        0.0012961243373509363`, 0.01435474322038849, 0.004154685160013603}, {
        0.00834549704873545, -0.004154685160013603, 0.011751224201363472`}}, {
        0.1264246754347276, -0.13988988367211136`, 0.21670409424000492`}}]}, 
     {EdgeForm[None], 
      GeometricTransformation3DBox[
       GraphicsComplex3DBox[{{0, 0, 3}, {0, -1, 0}, {0, 1, 0}, {-1, 0, 0}, {1,
         0, 0}}, 
        Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 5, 1}, {5, 3, 1}, {5, 2, 4, 
          3}}]], {{{0.013615209408760598`, 
        0.0010144068508653877`, -0.006212652533058191}, {
        0.0010144068508653884`, 0.0142569120085069, 0.004550982171203171}, {
        0.006212652533058191, -0.004550982171203171, 
        0.012872121417267495`}}, {0.21220244018743953`, -0.17334697403133073`,
         0.12207315235290404`}}]}, 
     {EdgeForm[None], 
      GeometricTransformation3DBox[
       GraphicsComplex3DBox[{{0, 0, 3}, {0, -1, 0}, {0, 1, 0}, {-1, 0, 0}, {1,
         0, 0}}, 
        Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 5, 1}, {5, 3, 1}, {5, 2, 4, 
          3}}]], {{{-0.006452746689997922, 0.01065179142779325, 
        0.008360705683942659}, {0.01065179142779325, 
        0.009711135955653202, -0.0041512862861539405`}, \
{-0.008360705683942659, 
        0.0041512862861539405`, -0.01174161073434472}}, {-0.315820828359116, \
-0.23199083427376713`, -0.043796732656626314`}}]}}, 
    {GrayLevel[0.5], Opacity[0.3], 
     {EdgeForm[None], 
      GeometricTransformation3DBox[
       GraphicsComplex3DBox[{{0, 0, 3}, {0, -1, 0}, {0, 1, 0}, {-1, 0, 0}, {1,
         0, 0}}, 
        Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 5, 1}, {5, 3, 1}, {5, 2, 4, 
          3}}]], {{{0.01333915869140993, 
        0.0010940242167555064`, -0.006772736257860288}, {
        0.0010940242167555064`, 0.014279347773530765`, 
        0.004461315744902443}, {0.006772736257860288, -0.004461315744902443, 
        0.012618506464940699`}}, {
        0.38649537126253697`, -0.24052576735150927`, -0.0679371688816092}}]}, \

     {EdgeForm[None], 
      GeometricTransformation3DBox[
       GraphicsComplex3DBox[{{0, 0, 3}, {0, -1, 0}, {0, 1, 0}, {-1, 0, 0}, {1,
         0, 0}}, 
        Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 5, 1}, {5, 3, 1}, {5, 2, 4, 
          3}}]], {{{-0.00608697530850618, -0.01112426841694461, \
-0.008012451795886492}, {-0.01112426841694461, 
        0.00913147945583676, -0.004226906094935123}, {0.008012451795886492, 
        0.004226906094935123, -0.011955495852669416`}}, \
{-0.18855809790334033`, -0.1291899107016234, 0.2469681880237841}}]}, 
     {EdgeForm[None], 
      GeometricTransformation3DBox[
       GraphicsComplex3DBox[{{0, 0, 3}, {0, -1, 0}, {0, 1, 0}, {-1, 0, 0}, {1,
         0, 0}}, 
        Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 5, 1}, {5, 3, 1}, {5, 2, 4, 
          3}}]], {{{-0.0004604501717000722, 0.00016855063626363488`, 
        0.014991983735396607`}, {0.00016855063626363488`, 
        0.014998162452149237`, -0.0001634433906769827}, \
{-0.014991983735396607`, 0.0001634433906769827, -0.0004622877195508379}}, {
        0.01029091747759097, -0.27638148786969374`, -0.16935246137255883`}}]}, 
     {EdgeForm[None], 
      GeometricTransformation3DBox[
       GraphicsComplex3DBox[{{0, 0, 3}, {0, -1, 0}, {0, 1, 0}, {-1, 0, 0}, {1,
         0, 0}}, 
        Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 5, 1}, {5, 3, 1}, {5, 2, 4, 
          3}}]], {{{0.01354150977964869, 
        0.0010368356875737417`, -0.006368083278715218}, {
        0.0010368356875737417`, 0.014262917071348228`, 
        0.004527048527773556}, {0.006368083278715218, -0.004527048527773556, 
        0.012804426850996918`}}, {0.26925426316609946`, -0.19125757863925819`,
         0.0714143124592397}}]}}, 
    {GrayLevel[0], Opacity[0.3], 
     {EdgeForm[None], 
      GeometricTransformation3DBox[
       GraphicsComplex3DBox[{{0, 0, 3}, {0, -1, 0}, {0, 1, 0}, {-1, 0, 0}, {1,
         0, 0}}, 
        Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 5, 1}, {5, 3, 1}, {5, 2, 4, 
          3}}]], {{{0.015, 0., 0.}, {0., -0.0050000000000005535`, 
        0.014142135623730753`}, {
        0., -0.014142135623730753`, -0.0050000000000005535`}}, {0., 
        0.49569714868422493`, -0.17525540762472405`}}]}}, 
    {RGBColor[0, 0, 1], Opacity[0.7], 
     {EdgeForm[None], 
      GeometricTransformation3DBox[
       GraphicsComplex3DBox[{{0, 0, 3}, {0, -1, 0}, {0, 1, 0}, {-1, 0, 0}, {1,
         0, 0}}, 
        Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 5, 1}, {5, 3, 1}, {5, 2, 4, 
          3}}]], {{{0.014936863749464997`, 
        0.0011232142313189939`, -0.0007927743187571966}, {
        0.0011232142313189939`, -0.004982342928934103, 0.01410371045962951}, {
        0.0007927743187571966, -0.01410371045962951, -0.005045479179469105}}, \
{0.0023455094583031805`, -0.12938717782369247`, 0.046055331500435774`}}]}, 
     {EdgeForm[None], 
      GeometricTransformation3DBox[
       GraphicsComplex3DBox[{{0, 0, 3}, {0, -1, 0}, {0, 1, 0}, {-1, 0, 0}, {1,
         0, 0}}, 
        Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 5, 1}, {5, 3, 1}, {5, 2, 4, 
          3}}]], {{{-0.0006497630571021102, 0.002076473098218023, 
        0.01484136339565884}, {0.002076473098218023, 
        0.014724485251828371`, -0.001969211400806335}, {-0.01484136339565884, 
        0.001969211400806335, -0.0009252778052737394}}, \
{-0.0005780822463910124, -0.04297350311512883, -0.1332428404539746}}]}, 
     {EdgeForm[None], 
      GeometricTransformation3DBox[
       GraphicsComplex3DBox[{{0, 0, 3}, {0, -1, 0}, {0, 1, 0}, {-1, 0, 0}, {1,
         0, 0}}, 
        Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 5, 1}, {5, 3, 1}, {5, 2, 4, 
          3}}]], {{{0.013366650492520797`, 
        0.0007120152263383919, -0.006769467403589144}, {0.0007120152263383922,
         0.014689615921016119`, 0.0029509690629507}, {
        0.006769467403589144, -0.0029509690629507, 0.01305626641353691}}, {
        0.12099069529132953`, -0.004934660361290732, 0.14131226530434135`}}]}, 
     {EdgeForm[None], 
      GeometricTransformation3DBox[
       GraphicsComplex3DBox[{{0, 0, 3}, {0, -1, 0}, {0, 1, 0}, {-1, 0, 0}, {1,
         0, 0}}, 
        Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 5, 1}, {5, 3, 1}, {5, 2, 4, 
          3}}]], {{{-0.00258811704811714, 0.002229788861528737, 
        0.014605810206155895`}, {0.002229788861528737, 
        0.014717311503363577`, -0.0018516975309062845`}, \
{-0.014605810206155895`, 
        0.0018516975309062845`, -0.00287080554475356}}, \
{-0.13668881674399785`, -0.18953478964337872`, -0.13331361700525293`}}]}, 
     {EdgeForm[None], 
      GeometricTransformation3DBox[
       GraphicsComplex3DBox[{{0, 0, 3}, {0, -1, 0}, {0, 1, 0}, {-1, 0, 0}, {1,
         0, 0}}, 
        Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 5, 1}, {5, 3, 1}, {5, 2, 4, 
          3}}]], {{{-0.0011373370261849273`, 0.0005677182100568416, 
        0.01494604163391895}, {0.0005677182100568416, 
        0.014980027437890949`, -0.0005258079440291365}, {-0.01494604163391895,
         0.0005258079440291365, -0.001157309588293977}}, {
        0.018656354318074553`, -0.260618088942348, -0.15137949987079652`}}]}}, 
    {RGBColor[1, 0, 0], Opacity[0.3], 
     {EdgeForm[None], 
      GeometricTransformation3DBox[
       GraphicsComplex3DBox[{{0, 0, 3}, {0, -1, 0}, {0, 1, 0}, {-1, 0, 0}, {1,
         0, 0}}, 
        Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 5, 1}, {5, 3, 1}, {5, 2, 4, 
          3}}]], {{{0.0003807763780890391, 0.002029335646398193, 
        0.014857213944214}, {0.002029335646398193, 
        0.014718302197691938`, -0.0020623717539944592`}, {-0.014857213944214, 
        0.0020623717539944592`, 
        0.00009907857578098066}}, {-0.015488267298600901`, 
        0.37253806399287104`, -0.20031893686474395`}}]}, 
     {EdgeForm[None], 
      GeometricTransformation3DBox[
       GraphicsComplex3DBox[{{0, 0, 3}, {0, -1, 0}, {0, 1, 0}, {-1, 0, 0}, {1,
         0, 0}}, 
        Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 5, 1}, {5, 3, 1}, {5, 2, 4, 
          3}}]], {{{0.013507658725953098`, 
        0.00045107178260663585`, -0.006506895572400035}, {
        0.0004510717826066357, 0.014863660037685505`, 0.001966759906813031}, {
        0.006506895572400035, -0.001966759906813031, 
        0.013371318763638599`}}, {0.09526820600032704, 
        0.33600347895632926`, -0.10621765369674889`}}]}, 
     {EdgeForm[None], 
      GeometricTransformation3DBox[
       GraphicsComplex3DBox[{{0, 0, 3}, {0, -1, 0}, {0, 1, 0}, {-1, 0, 0}, {1,
         0, 0}}, 
        Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 5, 1}, {5, 3, 1}, {5, 2, 4, 
          3}}]], {{{
        0.0021271653395261015`, -0.012294556452048825`, \
-0.008325806223165621}, {-0.012294556452048825`, 
        0.003257744130223237, -0.007951791296895352}, {0.008325806223165621, 
        0.007951791296895352, -0.00961509053025066}}, {-0.16134081384141438`, 
        0.1860599715098431, -0.05739366964040117}}]}, 
     {EdgeForm[None], 
      GeometricTransformation3DBox[
       GraphicsComplex3DBox[{{0, 0, 3}, {0, -1, 0}, {0, 1, 0}, {-1, 0, 0}, {1,
         0, 0}}, 
        Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 5, 1}, {5, 3, 1}, {5, 2, 4, 
          3}}]], {{{0.0002239044316111207, 0.0027636856617429444`, 
        0.014741502920956918`}, {0.0027636856617429444`, 
        0.014483086827533534`, -0.0027572155354997183`}, \
{-0.014741502920956918`, 
        0.0027572155354997183`, -0.00029300874085534206`}}, \
{-0.09489601977487973, -0.013261396379767856`, -0.19437462499668842`}}]}, 
     {EdgeForm[None], 
      GeometricTransformation3DBox[
       GraphicsComplex3DBox[{{0, 0, 3}, {0, -1, 0}, {0, 1, 0}, {-1, 0, 0}, {1,
         0, 0}}, 
        Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 5, 1}, {5, 3, 1}, {5, 2, 4, 
          3}}]], {{{0.013590951620660466`, 
        0.0007153750299249052, -0.006306684755989205}, {0.0007153750299249051,
         0.014636803504447495`, 0.0032019090772152712`}, {
        0.006306684755989205, -0.0032019090772152712`, 
        0.013227755125107958`}}, {
        0.2724758711172422, -0.0867318289302083, -0.0012329887022713981`}}]}, \

     {EdgeForm[None], 
      GeometricTransformation3DBox[
       GraphicsComplex3DBox[{{0, 0, 3}, {0, -1, 0}, {0, 1, 0}, {-1, 0, 0}, {1,
         0, 0}}, 
        Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 5, 1}, {5, 3, 1}, {5, 2, 4, 
          3}}]], {{{0.013261707402442624`, 
        0.0010876289808189673`, -0.006924173594883462}, {
        0.0010876289808189677`, 0.01431948349686379, 0.00433237297368638}, {
        0.006924173594883462, -0.00433237297368638, 0.012581190899306411`}}, {
        0.1889675959532689, -0.13186113730443816`, 
        0.21581312769050082`}}]}}}, {}, {}, {}, {}, {}, {}, {}, {
    Text3DBox["\<\"R\"\>", {0, 0, 0.6423724356957945}], 
    Text3DBox["\<\"P\"\>", 
     NCache[{-0.53, Rational[1, 4] 3^Rational[-1, 2] + 
       Rational[-1, 4] 
        3^Rational[
          1, 2], -0.21912414523193152`}, {-0.53, -0.28867513459481287`, \
-0.21912414523193152`}]], 
    Text3DBox["\<\"S\"\>", 
     NCache[{0.53, Rational[1, 4] 3^Rational[-1, 2] + 
       Rational[-1, 4] 3^Rational[1, 2], -0.21912414523193152`}, {
      0.53, -0.28867513459481287`, -0.21912414523193152`}]], 
    Text3DBox["\<\"A\"\>", {0, 0.6073502691896258, -0.21912414523193152`}]}},
  AspectRatio->Automatic,
  BaseStyle->{10, FontFamily -> "Palatino-Roman"},
  Boxed->False,
  ImageSize->{360., 315.34180126147953`},
  Lighting->NCache[{{"Point", 
      RGBColor[1, 1, 1], {
      0, 0, 1 + Rational[2, 3]^Rational[1, 2] + 
       Rational[-1, 2] 6^Rational[-1, 2]}}, {"Point", 
      RGBColor[1, 1, 1], {
       Rational[-3, 2], Rational[1, 4] 3^Rational[-1, 2] + 
       Rational[-1, 4] 3^Rational[1, 2], Rational[-1, 2] 
       6^Rational[-1, 2]}}, {"Point", 
      RGBColor[1, 1, 1], {
       Rational[3, 2], Rational[1, 4] 3^Rational[-1, 2] + 
       Rational[-1, 4] 3^Rational[1, 2], Rational[-1, 2] 
       6^Rational[-1, 2]}}, {"Point", 
      RGBColor[1, 1, 1], {
      0, 1 + Rational[1, 4] 3^Rational[-1, 2] + 
       Rational[1, 4] 3^Rational[1, 2], Rational[-1, 2] 6^Rational[-1, 2]}}, {
     "Point", 
      RGBColor[1, 1, 1], {0, 0, 0}}}, {{"Point", 
      RGBColor[1, 1, 1], {0, 0, 1.6123724356957945`}}, {"Point", 
      RGBColor[
      1, 1, 1], {-1.5, -0.28867513459481287`, -0.20412414523193154`}}, {
     "Point", 
      RGBColor[1, 1, 1], {
      1.5, -0.28867513459481287`, -0.20412414523193154`}}, {"Point", 
      RGBColor[1, 1, 1], {0, 1.5773502691896257`, -0.20412414523193154`}}, {
     "Point", 
      RGBColor[1, 1, 1], {0, 0, 0}}}],
  PlotRange->{{-0.54, 0.54}, {-0.32867513459481285`, 
   0.6173502691896258}, {-0.24412414523193154`, 0.6523724356957945}},
  ViewPoint->{-0.22811468407299443`, -0.350068685277322, -1.9558669705525693`},
  ViewVertical->{0.027277929411142515`, 
   1.1227067548445837`, -0.21588079173733016`}]], "Output",
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
Yq4XhYgjO6cyvX+odzIQj01Gi8CowVFOy3V8K9kjrdNW7ZGjRkLbqDa44JIL
4OIrLiaFPYoiPuz48w4rXujy3Uhumjz7CyLrBFRp7JHIPuzdv5ektgldZ7QO
c7Q2yUM01KOZMH9d2ypoPpA1bxI0H28111aNZ5sODV2yJz174kkTFTFVe/iY
0SiMwcWImbJCVvB0lq91L5e4ZiH7wnrlxm9sIZU379gMm/+42ezG8iDEy4qq
i0zx+JXMptYmD1+989oTORWTL5FaqCWV51K4mRUeKCh8fCxMU7Bg146nVk7X
9mIaT5gwAa6afZX6NufqOarGZ7nXXH8NhXApZXAG6XIrPvlzNVOjrbD18v6L
xz2Akob4hi1qSkXJqhc1KC0vg29ffDsVTy/3UNnjJnwQqRuFYo/bqIRt5a/R
Xl8HhD3Bum67wsaftXuumOHHtu1xgnGtgwsvvfWx5zY8R99oQsvwcI92G83O
foWFMqsw1DimMK0ZA1I3DdlsFrbu3goTTtxH5YQTPyJlcYxFyoZ2kiNZjnQp
O4iVbRaUnRgLxDx3krJmTPBAcyjrnvA6o2yg11hGRhuHq/BslctHk3nCkKFD
UMCQh35RkQoHSji1rByPr39ihHr+5efhvb3vGX80+gWxV5NMZjGETziVHCQo
edKXUFJPDShkkLORQCGM9oTzJYzWEh489PhDnqBjm1U5TMilU6tILnXO99dw
oFSSqeLBi6++qABf2vwS6Wb9PqFdNEU5ZWtxyzbJyhYUlC1wzv8hDOxZC0eq
gooZx3Mqpo8pxXJSU8wPUDosw1xOl1RRJ6fk9H7M81DJkN45xpCIMmLZsWuH
gnl5I2bV773/nqUFy2MPdXzrQbTqSrnVbBHUnJKrpl4omP2sWDBDGaUw+cq8
udDco1Yda6mp7miY9GHVI9hpq9atsus2kxXgMXNti6Crb3VN5Ed6pkHXxEKi
eqipYYBYKCkKyrL6Rs7oGa/PL6waD6UNlrSg6WDWdLCg6VSs0y5NaYLL1fSj
mdMVIaxD2HX6NNh65WVwUU21jZPtybr6kdWwet1qdQzfZgvhB5f8gD49+uSj
VHASkLqhsaC8ef6cTPpRZXRcLJHQidkmEPTMdE7PaVhnODPhyTzasX7z4u/D
e1MnaQk/VHUAh1T9ppJwo3JNJWFog6JZt/7yP34Jz730HGmEWuHE6vPgyRfJ
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
A2D79u2Js2h7yJAhZP/gwYNfYzfAEf8PaCS5OA==\
\>"]],

Cell[BoxData[
 TemplateBox[{TagBox[
    RowBox[{"Runtime", ",", " "}], DisplayForm],TemplateBox[{
     TagBox["0", DisplayForm], "0"}, "Row", 
    DisplayFunction -> (RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
    InterpretationFunction -> (RowBox[{"Row", "[", 
       RowBox[{"{", 
         RowBox[{#, ",", #2}], "}"}], "]"}]& )],TagBox[":", DisplayForm],"12"},
  "Row",
  DisplayFunction->(
   RowBox[{#, "\[InvisibleSpace]", #2, "\[InvisibleSpace]", #3, 
     "\[InvisibleSpace]", #4}]& ),
  InterpretationFunction->(RowBox[{"Row", "[", 
     RowBox[{"{", 
       RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], "]"}]& )]]],

Cell[BoxData[
 TemplateBox[{},
  "Row",
  DisplayFunction->(""& ),
  InterpretationFunction->(RowBox[{"Row", "[", 
     RowBox[{"{", "}"}], "]"}]& )]]]
}, Open  ]]
},
WindowSize->{650, 550},
WindowMargins->{{631, Automatic}, {Automatic, 290}},
WindowTitle->Automatic,
FrontEndVersion->"8.0 for Linux x86 (32-bit) (November 7, 2010)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[602, 23, 172, 5, 100, "Title"],
Cell[777, 30, 158, 8, 58, InheritFromParent],
Cell[938, 40, 2785, 70, 157, InheritFromParent],
Cell[3726, 112, 120, 5, 23, InheritFromParent],
Cell[3849, 119, 1459, 35, 25, InheritFromParent],
Cell[5311, 156, 115, 5, 23, InheritFromParent],
Cell[5429, 163, 1459, 35, 25, InheritFromParent],
Cell[6891, 200, 161, 8, 58, InheritFromParent],
Cell[7055, 210, 351, 9, 23, InheritFromParent],
Cell[7409, 221, 130, 5, 23, InheritFromParent],
Cell[7542, 228, 8832, 207, 93, InheritFromParent],
Cell[16377, 437, 129, 5, 23, InheritFromParent],
Cell[16509, 444, 411, 12, 43, InheritFromParent],
Cell[16923, 458, 5457, 120, 69, InheritFromParent],
Cell[22383, 580, 132, 5, 23, InheritFromParent],
Cell[22518, 587, 411, 12, 43, InheritFromParent],
Cell[22932, 601, 33734, 734, 457, InheritFromParent],
Cell[56669, 1337, 153551, 2586, 330, 140459, 2370, "CachedBoxData", \
"BoxData", "Output"],
Cell[210223, 3925, 624, 14, 23, InheritFromParent],
Cell[210850, 3941, 151, 5, 23, InheritFromParent]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
